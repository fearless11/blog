<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lemon11</title>
  
  <subtitle>actions speak louder than words.</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://fearless11.github.io/"/>
  <updated>2020-07-19T10:34:08.263Z</updated>
  <id>https://fearless11.github.io/</id>
  
  <author>
    <name>lemon11</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>k8s入门</title>
    <link href="https://fearless11.github.io/2020/07/19/k8s/k8s1-guide/"/>
    <id>https://fearless11.github.io/2020/07/19/k8s/k8s1-guide/</id>
    <published>2020-07-18T22:30:00.000Z</published>
    <updated>2020-07-19T10:34:08.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="云计算"><a href="#云计算" class="headerlink" title="云计算"></a>云计算</h2><h3 id="经典架构"><a href="#经典架构" class="headerlink" title="经典架构"></a>经典架构</h3><ul><li>IaaS （Infrastructure as a Service）基础设施即服务：网络、存储资源</li><li>PaaS （Platform as a Service）平台即服务：数据库服务、监控服务</li><li>SaaS （Software as a Service）软件即服务：软件系统，用户通过浏览器即可使用</li></ul><h3 id="容器Docker"><a href="#容器Docker" class="headerlink" title="容器Docker"></a>容器Docker</h3><ul><li>2013年Docker出现，Docker是一个轻量级虚拟化技术。覆盖解决IaaS和PaaS层的各类问题。</li><li>安装Docker要求<ul><li>只支持64位CPU架构计算机；</li><li>Linux内核3.10以上；</li><li>Linux开启cgroups和namespace；</li><li>Windows和OS X需要安装Boot2Docker工具。</li></ul></li><li>Docker优点：屏蔽底层差异在虚拟化一层实现跨平台支持、环境标准化、资源利用与隔离。</li><li>Docker问题：如何编排、部署、调度。</li></ul><h3 id="容器云kubernetes"><a href="#容器云kubernetes" class="headerlink" title="容器云kubernetes"></a>容器云kubernetes</h3><ul><li><p>容器云以容器位资源分割和调度的基本单位。例如：Flynn、Deis、Mesos、kubernetes等</p></li><li><p>2015年出现，kubernetes是一个全新的基于容器技术的分布式架构领先方案。基于Google内部大规模集群管理工具Borg。</p></li><li><p>kubernetes解决了什么问题？</p><ul><li>实现了应用部署、高可用管理和弹性伸缩等基本功能；</li><li>成为一套完整、简单易用的RESTful API对外提供服务。</li></ul></li><li><p>kubernetes设计哲学： 维护应用容器集群一直处于用户所期望的状态。</p></li><li><p>kubernetes恢复机制：容器自动重启、自动调度、自动备份等。</p></li></ul><h2 id="kubernetes"><a href="#kubernetes" class="headerlink" title="kubernetes"></a>kubernetes</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>pod是基本单位。k8s集群分为两部分：Master &amp; Node。</p><ul><li>Master上关键进程：<ol><li>Kubernetes API Server：提供HTTP Rest接口对所有资源CURD，控制集群入口。</li><li>Kubernetes Controller Manager：对所有资源自动化控制。</li><li>Kubernetes Scheduler：资源调度pod调度。</li><li>etcd：保存所有资源对象。</li></ol></li><li>Node上关键进程：<ol><li>kubelet：负责pod对于容器的创建与起停，与master通信管理集群。</li><li>kube-proxy：实现与k8s service通信是实现负载均衡机制。</li><li>Docker Engine：Docker引擎，负责本机的容器创建与管理。</li></ol></li></ul><h3 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h3><ul><li>资源对象：Node、Pod、Service等大部分概念都属于资源对象，可以通过API进行增删改查</li><li>Master：负责整个集群的管理和控制，所有控制命令的管理。</li><li>Node：可以是物理机或虚拟机，动态增加k8s中。</li><li>Pod：  基本单位，管理一组工作负载(docker容器)，默认包含一个Pause容器。</li><li>Service：服务的访问入口地址。Service与Pod间通过Label实现对接。</li><li>Volume：与Pod的生命周期相同，容器的终止或重启volume数据不会丢失。</li><li>Namespace：多租户资源隔离，范围Pod、RC、Service、Demployment。</li><li>Label：KV 资源对象捆绑标签分组管理。比如：版本标签、环境标签、架构标签、分区标签。</li><li>Annotation：KV 便于外部工具查找。</li></ul><h3 id="pod如何管理？"><a href="#pod如何管理？" class="headerlink" title="pod如何管理？"></a>pod如何管理？</h3><p>同一个pod的多个容器：</p><ul><li><p>每个pod都有一个pause容器，判断pod的存活。</p></li><li><p>存储管理：pod级别挂在后，同一pod的容器可以共享使用。</p></li><li><p>配置管理（configMap、sercet）：1、环境变量使用configMap； 2. 通过volumeMount使用configMap。</p></li></ul><h4 id="静态pod"><a href="#静态pod" class="headerlink" title="静态pod"></a>静态pod</h4><p>特点：由kubelet管理，存在特定Node上，不通过API Server管理，kubelet无法对它们进行健康检测。</p><p>创建：配置文件、HTTP方式也是通过下载配置文件实现。</p><p>删除：只能通过删除配置文件。</p><h4 id="管理"><a href="#管理" class="headerlink" title="管理"></a>管理</h4><p>生命周期： pending、running、succeeded、failed、unknown</p><p>重启策略：always、onfailure、never</p><p>健康检测：livenessProbe（判断容器存活running）、ReadinessProbe（判断启动完成ready）</p><p>扩容缩容：手动（命令解决）、自动（HPA控制器实现，pod设置resources.requests.cpu让heapster知道cpu情况，提供HPA操作）</p><p>升级回滚：滚动升级（pod是一个一个替换为最新版）、回滚（查看历史后rollback）、暂停</p><p>初始化容器： init container 执行一次在其他pod里的容器之前执行，如等待关联组件启动、环境变量等</p><h4 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h4><ul><li>Deployment/RC：全自动调度</li><li>NodeSelector：定向调度（精准匹配，结合给node打标签实现）</li><li>NodeAffinity ：Node亲和性调度（模糊匹配，又分为硬限制–不符合不调度、软限制–不符合调度到其他node）</li><li>PodAffinity ：Pod亲和与互斥（模糊匹配，分为硬限制、软限制）</li><li>Taints &amp; Tolerations：污点和容忍  （给node标记为taints后拒绝pod在上运行，除非pod设置tolerations–实现pod的驱逐）</li><li>Daemonset：每个Node上调度一个pod。 日志采集、性能监控</li><li>Job：批处理调度  启动多个work pod处理任务</li><li>Cronjob：定时任务。Minute Hours Day Month Week Year</li><li>自定义调度器：通过对接接口实现某个pod调度到某个node</li><li>StatefulSet：有状态服务。每个pod由固定的标识和后端存储，这样pod重启后访问和存储都不变。（结合Headless service、共享存储与StorageClass对接实现动态存储供应模式）</li></ul><h3 id="service如何访问？"><a href="#service如何访问？" class="headerlink" title="service如何访问？"></a>service如何访问？</h3><h4 id="集群内部访问"><a href="#集群内部访问" class="headerlink" title="集群内部访问"></a>集群内部访问</h4><ul><li>podIP:port ：  pod的podIP是不可靠，当pod调度到不同node将变化。而且多个pod时还需要负载均衡</li><li>clusterIP:port ：service的clusterIP负载均衡到后端多个pod。（负载均衡策略：RoundRobin轮询、SessionAffinity=ClientIP同以客户IP将绑定到固定后端pod上）</li><li>多端口： clusterIP:port1 、clusterIP:port2</li><li>外部服务service： 创建service时不选择Selector即无法选择后端pod，手动创建同名的Endpoint执向实际的后端访问。</li><li>Headless service：自己控制负载均衡策略。创建service时不设置clusterIP（clusterIP:None），仅仅通过标签Selector选择后端的pod列表。 stateful通过headless service为客户端返回多个服务地址。</li></ul><h4 id="集群外部访问"><a href="#集群外部访问" class="headerlink" title="集群外部访问"></a>集群外部访问</h4><ul><li>hostPort：为pod的容器设置hostPort：  nodeIP:hostPort</li><li>设置pod网络为hostNetwork=true：nodeIP:port</li><li>service端口映射到NodePort：nodeIP:nodePort</li></ul><h4 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h4><p>域名： service_name.namespace_name.domain、 service_name.namespace_name.svc.domain</p><ul><li><p>实现逻辑</p><ol><li>通过调用k8s master的API获取集群所有service信息，持续监控service</li><li>kubelet通过–cluster_dns后解析域名的ip  </li><li>容器应用程序通过访问服务名字访问服务</li></ol></li><li><p>自定义DNS</p><p>pod的DNS策略： Default（继承pod所在node的/etc/resolv.conf）、 ClusterFirst（DNS查询发送到kube-dns服务进行解析）</p></li></ul><h4 id="Ingress-7层路由机制"><a href="#Ingress-7层路由机制" class="headerlink" title="Ingress 7层路由机制"></a>Ingress 7层路由机制</h4><ul><li>Ingress Controller： Daemonset的方式部署到每个node上，类似在node上部署了nginx</li><li>Ingress：访问策略，即哪个域名访问到哪个service:port。类似nginx的server_name及location （可设置TLS）</li></ul><p>（自己电脑访问配置/etc/host哈）</p><h3 id="volume如何管理？"><a href="#volume如何管理？" class="headerlink" title="volume如何管理？"></a>volume如何管理？</h3><p>用途：作为一种资源被pod使用</p><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><ul><li>emptyDir： 临时空间 ，无保存（多容器共享目录）</li><li>hostPath：用于日志文件（单机测试）</li><li>gcePersistentDisk：谷歌云提供的永久磁盘</li><li>awsElasticBlockStore：亚马孙公有云</li><li>NFS</li><li>…</li></ul><h4 id="PV-—-gt-PVC"><a href="#PV-—-gt-PVC" class="headerlink" title="PV —&gt; PVC"></a>PV —&gt; PVC</h4><ul><li>pv只是网络存储，不属于任何Node； 不定义在pod上，独立与pod之外</li><li>pod使用某中类型的pv，需要先定义一个PVC PersistentVolumeClaim，PVC会消费PV</li></ul><h4 id="StorageClass"><a href="#StorageClass" class="headerlink" title="StorageClass"></a>StorageClass</h4><ul><li>优点<ul><li>减轻用户对于存储资源细节关注。对用户设置的PVC申请屏蔽后端存储细节。</li><li>减轻手工管理PV的工作。系统自动完成PV的创建与绑定，实现动态的资源供应。</li></ul></li></ul><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p><a href="https://github.com/kubernetes/kubernetes" target="_blank" rel="noopener">k8s-github</a></p><p><a href="https://www.kubernetes.org.cn/" target="_blank" rel="noopener">k8s-zh-community</a></p><p><a href="https://kubernetes.io/zh/docs/concepts/overview/components/" target="_blank" rel="noopener">https://kubernetes.io/zh/docs/concepts/overview/components/</a></p>]]></content>
    
    <summary type="html">
    
      k8s
    
    </summary>
    
    
    
      <category term="k8s是什么，解决了什么问题" scheme="https://fearless11.github.io/tags/k8s%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E8%A7%A3%E5%86%B3%E4%BA%86%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Linux 常用命令</title>
    <link href="https://fearless11.github.io/2020/07/11/linux/cmd1_daily/"/>
    <id>https://fearless11.github.io/2020/07/11/linux/cmd1_daily/</id>
    <published>2020-07-11T03:00:00.000Z</published>
    <updated>2020-07-11T02:50:38.492Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h3><h4 id="help"><a href="#help" class="headerlink" title="help"></a>help</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获得命令帮助</span></span><br><span class="line">cmd --<span class="built_in">help</span></span><br><span class="line">man cmd</span><br><span class="line">info cmd</span><br></pre></td></tr></table></figure><h4 id="alias-amp-unalias"><a href="#alias-amp-unalias" class="headerlink" title="alias &amp; unalias"></a>alias &amp; unalias</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> gitee=<span class="string">'cd /data/go/src/gitee.com/feareless11'</span></span><br><span class="line"><span class="built_in">unalias</span> gitee</span><br></pre></td></tr></table></figure><h4 id="export"><a href="#export" class="headerlink" title="export"></a>export</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PS1=<span class="string">'\[\e[32m\][\u@\H:\[\e[m\]\[\e[33m\]\w\[\e[m\]\[\e[32m\]]\[\e[m\]\$ '</span></span><br></pre></td></tr></table></figure><h4 id="jq"><a href="#jq" class="headerlink" title="jq"></a>jq</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sh 60_hardware.sh | jq</span><br><span class="line"></span><br><span class="line"><span class="comment"># json校验</span></span><br><span class="line">sh 60_hardware.sh | python -m json.tool</span><br></pre></td></tr></table></figure><h4 id="systemctl"><a href="#systemctl" class="headerlink" title="systemctl"></a>systemctl</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld      <span class="comment"># 临时关闭</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld   <span class="comment"># 禁止开机启动</span></span><br></pre></td></tr></table></figure><h4 id="bc"><a href="#bc" class="headerlink" title="bc"></a>bc</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 浮点数比较</span></span><br><span class="line"><span class="keyword">if</span> [[ $(<span class="built_in">echo</span> <span class="string">"2.0 &gt; 100.0"</span>|bc) == 1 ]] ; <span class="keyword">then</span>  <span class="built_in">echo</span> ok; <span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h4 id="ntpdate"><a href="#ntpdate" class="headerlink" title="ntpdate"></a>ntpdate</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选择时区</span></span><br><span class="line">tzselect</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置时区</span></span><br><span class="line">tail -n 1 /etc/profile</span><br><span class="line">TZ=<span class="string">'Asia/Shanghai'</span>; <span class="built_in">export</span> TZ</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新服务器时间</span></span><br><span class="line">yum install ntp -y  </span><br><span class="line">ntpdate 1.cn.pool.ntp.org  </span><br><span class="line">ntpdate cn.pool.ntp.org</span><br></pre></td></tr></table></figure><h4 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ls -lthsi /data</span></span><br><span class="line">-l 长格</span><br><span class="line">-s 文件大小</span><br><span class="line">-i 节点信息</span><br><span class="line">-h 字节单位</span><br><span class="line">-t 文件修改时间排序</span><br><span class="line">-R 递归显示内容 递归recursive</span><br><span class="line">-a 显示所有子目录和文件 包含隐藏文件</span><br><span class="line">-A 类似于-a，不显示隐藏文件</span><br><span class="line">-r 目录清单以英文字母的顺序逆序显示</span><br><span class="line">查看目录本身：ls -ld 目录</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ls -l <span class="built_in">test</span></span></span><br><span class="line">-rw------- 1 root root 1086 07-29 18:35 test</span><br><span class="line">文件属性 连接数 拥有者 群组 实际用去的大小 最后被修改的时间 文件名</span><br><span class="line">第2字段：</span><br><span class="line">连接数 == 目录下子目录的个数</span><br><span class="line">如果是链接目录：起始值是1</span><br><span class="line">普通空目录：起始值是2，表示该目录下有两个隐藏的子目录"."和".."</span><br><span class="line"></span><br><span class="line">ls -1 -f /path/to/dir  # 文件过多无法ls</span><br></pre></td></tr></table></figure><h4 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h4><h4 id="dos2unix-amp-unix2dos"><a href="#dos2unix-amp-unix2dos" class="headerlink" title="dos2unix  &amp; unix2dos"></a>dos2unix  &amp; unix2dos</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install dos2unix -y  </span><br><span class="line">dos2unix check.sh </span><br><span class="line">dos2unix -k -n oldfile newfile  <span class="comment"># k时间戳不变,n保存为新文件</span></span><br><span class="line"><span class="comment"># unix2dos命令的使用方式与dos2unix命令的类似</span></span><br></pre></td></tr></table></figure><h4 id="date"><a href="#date" class="headerlink" title="date"></a>date</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">date -d @1523440200             <span class="comment"># 解析时间戳</span></span><br><span class="line">date -d <span class="string">'2017-10-20'</span> +%s        <span class="comment"># 生成时间戳</span></span><br><span class="line">date -d <span class="string">"1 day ago"</span> +%s         <span class="comment"># 一天前</span></span><br><span class="line">date -u +<span class="string">"%FT%T.000Z"</span>           <span class="comment"># UTC时间显示</span></span><br><span class="line">date -u +<span class="string">"%FT%T.000Z"</span> -d <span class="string">'1 hours ago'</span></span><br></pre></td></tr></table></figure><h4 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h4><h4 id="whoami"><a href="#whoami" class="headerlink" title="whoami"></a>whoami</h4><h4 id="time"><a href="#time" class="headerlink" title="time"></a>time</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time cmd   <span class="comment"># 命令执行的real真实、user用户、sys系统时间</span></span><br></pre></td></tr></table></figure><h4 id="basename"><a href="#basename" class="headerlink" title="basename"></a>basename</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">basename 绝对路径 <span class="comment"># 截取路径的最后一层 (pwd |xargs basename)</span></span><br></pre></td></tr></table></figure><h4 id="dirname"><a href="#dirname" class="headerlink" title="dirname"></a>dirname</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirname 绝对路径 <span class="comment"># 只不截取路径的最后一层 (pwd |xargs dirname)</span></span><br></pre></td></tr></table></figure><h4 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># count数量</span></span><br><span class="line">grep -c <span class="string">"str"</span> file</span><br><span class="line"><span class="comment"># 忽略大小写</span></span><br><span class="line">grep -i <span class="string">"Str"</span> file</span><br><span class="line"><span class="comment"># 不显示文件名</span></span><br><span class="line">grep -h <span class="string">"str"</span> file</span><br><span class="line"><span class="comment"># 只显示文件名</span></span><br><span class="line">grep -l <span class="string">"str"</span> file</span><br><span class="line"><span class="comment"># 显示行号</span></span><br><span class="line">grep -n <span class="string">"str"</span> file</span><br><span class="line"><span class="comment"># 大写字母开头</span></span><br><span class="line">grep ^[[:upper:]] file</span><br><span class="line">grep ^[A~Z] file</span><br><span class="line"><span class="comment"># 精确匹配 the</span></span><br><span class="line">grep <span class="string">"\&lt;the\&gt;"</span> file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># POSIX 增加的特殊编码</span></span><br><span class="line">[:upper:]  ==  [A~Z]</span><br><span class="line">[:lower:]  ==  [a~z]</span><br><span class="line">[:digit:]  ==  [0~9]</span><br><span class="line">[:alnum:]  ==  [0~9a-zA-Z]</span><br><span class="line">[:space:]  ==  空格或tab</span><br><span class="line">[:alpha:]  ==  [a~zA~Z]</span><br></pre></td></tr></table></figure><h4 id="xargs"><a href="#xargs" class="headerlink" title="xargs"></a>xargs</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从standard input标注输入执行命令</span></span><br><span class="line"><span class="comment"># 将标准输入内容都会换成一个空格分割，默认命令/bin/echo</span></span><br><span class="line">-I 必须指定替换字符　</span><br><span class="line">－i 是否指定替换字符-可选</span><br><span class="line"></span><br><span class="line"><span class="built_in">pwd</span> | xargs basename         <span class="comment"># 允许不支持管道的命令执行</span></span><br><span class="line">ls /tmp | xargs -I <span class="string">'&#123;&#125;'</span> du /tmp/&#123;&#125;   <span class="comment"># -I将标准输入保存到&#123;&#125;</span></span><br><span class="line">ls /tmp | xargs -I <span class="string">'sth'</span> du /tmp/sth <span class="comment"># 同上 </span></span><br><span class="line"></span><br><span class="line">ls /config/pipeline/*.conf   | xargs -If  cp f ./</span><br></pre></td></tr></table></figure><h4 id="readlink"><a href="#readlink" class="headerlink" title="readlink"></a>readlink</h4><h4 id="which-amp-whereis"><a href="#which-amp-whereis" class="headerlink" title="which &amp; whereis"></a>which &amp; whereis</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找shell命令的全路径 （根据PATH）</span></span><br><span class="line"><span class="built_in">which</span> <span class="built_in">cd</span>     <span class="comment"># 查找cd的绝对路径</span></span><br><span class="line"><span class="built_in">which</span> -a <span class="built_in">cd</span>  <span class="comment"># 查找所有PATH下的cd绝对路径，默认找第一个停止</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找命令的二进制、源码、man手册 （根据PATH）</span></span><br><span class="line">whereis <span class="built_in">cd</span>      <span class="comment"># 查找cd相关</span></span><br><span class="line">whereis -b <span class="built_in">cd</span>   <span class="comment"># 只找cd的命令绝对路径</span></span><br><span class="line">whereis -m <span class="built_in">cd</span>   <span class="comment"># 只招手册</span></span><br><span class="line">whereis -s <span class="built_in">cd</span>   <span class="comment"># 只招源码</span></span><br></pre></td></tr></table></figure><h4 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 通过关键字找文件 （根据update管理的数据库）</span></span><br><span class="line"><span class="comment"># 操作前</span></span><br><span class="line">updatedb         <span class="comment"># 更新数据库，默认十分钟corn操作一次</span></span><br><span class="line">locate  tmp      <span class="comment"># 找绝对路径中包含tmp的文件或目录</span></span><br><span class="line">locate -b tmp    <span class="comment"># 找绝对路径中basename中包含tmp的文件或目录</span></span><br><span class="line">locate -b <span class="string">"\tmp"</span> <span class="comment"># 精确找绝对路径中basenamne是tmp的文件或目录</span></span><br><span class="line">locate -b -c tmp <span class="comment"># 统计找的绝对路径个数</span></span><br></pre></td></tr></table></figure><h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找到两天前文件压缩</span></span><br><span class="line">find /data/remotesyslog/<span class="built_in">test</span>/ -<span class="built_in">type</span> f -name <span class="string">"*.log"</span> -mtime +2 | xargs -If gzip f;</span><br><span class="line"><span class="comment"># 查找权限</span></span><br><span class="line">find . -name <span class="string">"t*"</span> -perm 744 -<span class="built_in">print</span> </span><br><span class="line"><span class="comment"># 查找当天内的log文件</span></span><br><span class="line">find .  -name <span class="string">"*.log"</span> -mtime 0 -<span class="built_in">exec</span> ls -l &#123;&#125; \;</span><br><span class="line">find .  -name <span class="string">"*.log"</span> -mtime -1 -<span class="built_in">exec</span> ls -l &#123;&#125; \;</span><br><span class="line"><span class="comment"># 查找昨天的log文件</span></span><br><span class="line">find .  -name <span class="string">"*.log"</span> -mtime 1 -<span class="built_in">exec</span> ls -l &#123;&#125; \;</span><br><span class="line"><span class="comment"># 查找昨天以前的log文件</span></span><br><span class="line">find .  -name <span class="string">"*.log"</span> -mtime +1 -<span class="built_in">exec</span> ls -l &#123;&#125; \;</span><br></pre></td></tr></table></figure><h4 id="du"><a href="#du" class="headerlink" title="du"></a>du</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计文件占用磁盘大小</span></span><br><span class="line">du -ah /tmp       <span class="comment"># 递归目录下所有文件的大小</span></span><br><span class="line">du -sh /tmp       <span class="comment"># 统计目录的大小</span></span><br><span class="line">du -ch /tmp /var  <span class="comment"># 统计总的大小</span></span><br><span class="line">du --exclude <span class="string">"*.txt"</span> /tmp  <span class="comment"># 排除某类文件</span></span><br><span class="line">du --max-depth 2 /tmp  <span class="comment"># 显示深度2层</span></span><br><span class="line">du -d 2 /tmp           <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计/下目录的大小，排除data和proc目录</span></span><br><span class="line">du -h -d 1 --exclude=<span class="string">"proc"</span> --exclude=<span class="string">"data"</span> /</span><br></pre></td></tr></table></figure><h4 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看kill能发出的所有信号</span></span><br><span class="line"><span class="built_in">kill</span> -l</span><br></pre></td></tr></table></figure><h3 id="trap"><a href="#trap" class="headerlink" title="trap"></a>trap</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 捕捉信号后执行命令</span></span><br><span class="line"><span class="built_in">trap</span> cmd sig1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 捕捉到INT信号（crtl+c）后脚本退出</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">"echo 'You hit crtl+c'"</span> INT</span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">let</span> count=count+1</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"this is <span class="variable">$count</span> sleep"</span></span><br><span class="line">  sleep 5</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略对TERM INT信号的处理</span></span><br><span class="line"><span class="built_in">trap</span> <span class="string">""</span> TERM INT</span><br></pre></td></tr></table></figure><h4 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -t iso9660 /dev/cdrom /mnt <span class="comment"># linux挂载光盘</span></span><br><span class="line">mount -o loop filename.iso /mnt  <span class="comment"># linux挂载ISO</span></span><br></pre></td></tr></table></figure><h4 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h4><p><a href="https://www.cnblogs.com/ruiy/p/curl.html" target="_blank" rel="noopener">curl</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看公网ip</span></span><br><span class="line">curl ipinfo.io/ip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户密码</span></span><br><span class="line">curl -u user:passwd http://test.com curl </span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取http_code</span></span><br><span class="line">curl -sL -o /dev/null -w <span class="string">"%&#123;http_code&#125;\n"</span> <span class="string">'http://res.qaxlist.com'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存js文件</span></span><br><span class="line"> curl -O  https://code.jquery.com/jquery-3.4.1.min.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询本机公网IP</span></span><br><span class="line">curl ifconfig.me </span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问时间</span></span><br><span class="line">curl -X POST -w %&#123;time_namelookup&#125;:%&#123;time_connect&#125;:%&#123;time_starttransfer&#125;:%&#123;time_total&#125; <span class="string">"http://test.com?id=123"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拨测加cookie</span></span><br><span class="line">curl  -H <span class="string">'Cookie: env=idc'</span>  -H<span class="string">'Host:boss.we.com'</span> <span class="string">"http://10.10.10.142"</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算es的索引大小</span></span><br><span class="line">curl -s http://localhost:9201/_cat/indices | grep <span class="variable">$&#123;yesterday&#125;</span> | awk <span class="string">'&#123;print $NF&#125;'</span> | grep mb | awk -F<span class="string">'mb'</span> <span class="string">'&#123;print $1&#125;'</span>| tr <span class="string">'\n'</span> <span class="string">'+'</span> | sed <span class="string">'s/+$/ /g'</span>| xargs -I@  <span class="built_in">echo</span> \(@\)/1000 | bc</span><br><span class="line"></span><br><span class="line">curl -sv  -XPOST http://192.168.1.196:8080/v1/<span class="built_in">jobs</span>  -H <span class="string">"Content-Type:application/json"</span> -d<span class="string">'&#123;&#125;'</span></span><br><span class="line">“-s”的用作为：不显示创造的进度</span><br><span class="line">“-v”的作用为：显示请求和响应</span><br></pre></td></tr></table></figure><h4 id="shutdown-amp-poweroff-amp-reboot"><a href="#shutdown-amp-poweroff-amp-reboot" class="headerlink" title="shutdown &amp; poweroff &amp; reboot"></a>shutdown &amp; poweroff &amp; reboot</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关机 重启</span></span><br><span class="line">shutdown -h now    <span class="comment"># 立刻关机</span></span><br><span class="line">shutdown -h 8:00   <span class="comment"># 8点关机</span></span><br><span class="line">shutdown -h +10    <span class="comment"># 系统再过十分钟自动关机</span></span><br><span class="line">shutdown -c        <span class="comment"># 取消命令</span></span><br></pre></td></tr></table></figure><h3 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h3><h4 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">touch aa    # 文件存在则更新访问修改改变时间为当前时间</span><br><span class="line">touch -md 20141227 文件   # 指定修改时间</span><br><span class="line">touch -ad 时间 文件       # 指定访问时间</span><br></pre></td></tr></table></figure><h4 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rfv 文件   # 强制递归删除</span><br></pre></td></tr></table></figure><h4 id="stat"><a href="#stat" class="headerlink" title="stat"></a>stat</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">stat</span></span></span><br><span class="line">  File: ‘aa’</span><br><span class="line">  Size: 0         Blocks: 0          IO Block: 4096   regular empty file</span><br><span class="line">Device: fd01h/64769dInode: 484648      Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)</span><br><span class="line">Access: 2020-02-09 14:39:36.427313631 +0800</span><br><span class="line">Modify: 2020-02-09 14:39:36.427313631 +0800</span><br><span class="line">Change: 2020-02-09 14:39:36.427313631 +0800</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure><h4 id="cp-amp-scp"><a href="#cp-amp-scp" class="headerlink" title="cp &amp; scp"></a>cp &amp; scp</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp -r 目录  新目录</span><br><span class="line">cp -a file1 file2 目录   # 复制并保留文件属性</span><br><span class="line">cp -u 源文件 目标文件     # 只有源文件比目标文件更新时才复制</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 远程copy</span></span><br><span class="line">scp file1 10.0.10.108:/tmp/      # 当前文件复制到远程tmp目录</span><br><span class="line">scp 10.0.10.108:/tmp/file1  ./   # 远程文件复制当前目录</span><br><span class="line">sshpass -p passwd scp -P 22 -r /tmp/aa user@it.abc.com:/10.11.9.156/tmp/ # 免密递归copy</span><br><span class="line">scp -P 22 -o StrictHostKeyChecking=no file1 10.0.10.108:/tmp/               # scp传输跳过第一次yes验证</span><br></pre></td></tr></table></figure><h4 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 通过ssh或daemon为媒介</span><br><span class="line"># 考虑：文件属性、时间、权限、软链、断电续传、带宽、压缩</span><br><span class="line"></span><br><span class="line">-P 包含显示进度和断点续传</span><br><span class="line">-z 压缩</span><br><span class="line">-a 包含所有文件权限、属性、时间等</span><br><span class="line">--delete 目标目录和传输目录保持一致</span><br><span class="line">--bwlimit 1000 默认单位KBytes</span><br><span class="line">--partial  断点续传，传输中断不删除临时文件</span><br><span class="line">--progress 显示进度</span><br><span class="line"></span><br><span class="line"># 保持源、目标文件一致</span><br><span class="line">rsync -avP --delete test root@192.168.1.183:&#x2F;tmp&#x2F;test</span><br><span class="line"># 限制传输速度为1M</span><br><span class="line">rsync -avPz --bwlimit&#x3D;1000 aa root@192.168.1.183:&#x2F;tmp&#x2F;aa</span><br><span class="line"># 指定协议</span><br><span class="line">rsync -avPz -e &#39;ssh -p 223&#39; aa root@192.168.1.183:&#x2F;tmp&#x2F;aa</span><br></pre></td></tr></table></figure><h4 id="sz-amp-rz"><a href="#sz-amp-rz" class="headerlink" title="sz &amp; rz"></a>sz &amp; rz</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install lrzsz -y </span><br><span class="line">sz file  <span class="comment"># xshell文件传输</span></span><br></pre></td></tr></table></figure><h4 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 归档排除某个目录</span></span><br><span class="line">tar zcvf zabbix.tgz  --exclude=zabbix/scripts  zabbix</span><br></pre></td></tr></table></figure><h3 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">zip -r filename.zip filesdir</span><br><span class="line">zip file.zip file1 file2</span><br><span class="line"></span><br><span class="line">sudo yum install unzip -y</span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">unzip -v large.zip</span><br><span class="line">unzip file.zip</span><br></pre></td></tr></table></figure><h4 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">节省空间和网络传输时间</span><br><span class="line">gzip testfile           <span class="comment"># 压缩文件为testfile.gz</span></span><br><span class="line">gzip -l testfile.gz     <span class="comment"># 查看</span></span><br><span class="line">gzip -dv testfile.gz    <span class="comment"># 解压</span></span><br></pre></td></tr></table></figure><h4 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mv file1 file2 dir1 目标dir</span><br><span class="line"><span class="meta">#</span><span class="bash"> -p 保持权限</span></span><br><span class="line">mv -p file1 dir1</span><br></pre></td></tr></table></figure><h4 id="ln"><a href="#ln" class="headerlink" title="ln"></a>ln</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">ln 源文件 链接文件        <span class="comment"># 硬链接</span></span><br><span class="line">ln -s 源文件 链接文件 == cp -s 源文件 链接文件 <span class="comment"># 软链接</span></span><br><span class="line"><span class="comment"># 源文件要用绝对路径创建软链接</span></span><br><span class="line"><span class="comment"># 在软链接目录中 查看真实的路径： pwd -P</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 硬链接和软链接的区别</span></span><br><span class="line"><span class="comment"># 因指向同一文件，故对源、软、硬链接文件的任一修改都会修改</span></span><br><span class="line">硬链接</span><br><span class="line">1. 共享inode节点</span><br><span class="line">2. 不能对目录作硬链接</span><br><span class="line">3. 不能跨文件系统(分区)</span><br><span class="line">4. 删除源文件，链接文件不会受到影响</span><br><span class="line"></span><br><span class="line">软链接</span><br><span class="line">1. 不共享inode节点</span><br><span class="line">2. 能对目录作软连接</span><br><span class="line">3. 能跨越文件系统</span><br><span class="line">4. 删除源文件，链接文件失效</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件内容查找过程</span></span><br><span class="line">文件名——inode号——inode表——block块——内容数据 （硬链接和源文件）</span><br><span class="line">文件名——inode号——inode表——链接文件的源文件名——inode号——inode表——block块——内容数据 （软链接）</span><br><span class="line"></span><br><span class="line"><span class="comment"># 硬盘格式化分为两个区域</span></span><br><span class="line">1.inode table 区域(数据索引值)</span><br><span class="line">2.数据存储区域</span><br></pre></td></tr></table></figure><h4 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h4><h4 id="tac"><a href="#tac" class="headerlink" title="tac"></a>tac</h4><h4 id="more"><a href="#more" class="headerlink" title="more"></a>more</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 全屏方式分页查看</span></span><br><span class="line">enter 向下逐行显示</span><br><span class="line">空格   向下翻一屏 （末尾退出）</span><br><span class="line">b键   向上翻一屏 </span><br><span class="line">q    退出</span><br></pre></td></tr></table></figure><h4 id="less"><a href="#less" class="headerlink" title="less"></a>less</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 交互操作 （vim适用） </span></span><br><span class="line">enter 向下逐行显示</span><br><span class="line">空格   向下翻一屏 （末尾不退出）</span><br><span class="line">b键   向上翻一屏</span><br><span class="line">q    退出</span><br><span class="line">G    末尾</span><br><span class="line">gg   开头</span><br></pre></td></tr></table></figure><h4 id="head"><a href="#head" class="headerlink" title="head"></a>head</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">head file      <span class="comment"># 查看前10行</span></span><br><span class="line">head -n 3 file   <span class="comment"># 查看前3行</span></span><br><span class="line">head -c 3 file   <span class="comment"># 查看前c字节的内容，一字母一字节</span></span><br></pre></td></tr></table></figure><h4 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tail file         <span class="comment"># 最后十行</span></span><br><span class="line">tail -n 3 file    <span class="comment"># 最后三行</span></span><br><span class="line">tail -n +3 file   <span class="comment"># 从第三行开始到结束</span></span><br><span class="line">tail -f file      <span class="comment"># 监控追加到文件的内容，ctrl+c结束</span></span><br><span class="line">tail -n +10 file | head -1 <span class="comment"># 显示第十行</span></span><br><span class="line">head file | tail -n 1</span><br></pre></td></tr></table></figure><h4 id="mkdir-amp-rmdir"><a href="#mkdir-amp-rmdir" class="headerlink" title="mkdir &amp; rmdir"></a>mkdir &amp; rmdir</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -m 777 -p /aa/bb/cc  # 创建多级目录指定权限</span><br><span class="line">rmdir -p /aa/bb/cc         # 删除多级目录</span><br></pre></td></tr></table></figure><h4 id="lsyncd"><a href="#lsyncd" class="headerlink" title="lsyncd"></a>lsyncd</h4><p><a href="https://lifeimpressions.net/?z=56408&c=55kB*tUbi2E&l1=158121&l2=104666&l3=&l4=56cd1de15d25bf083ddf7a4b&l5=PM_ADSIZE_WIDTH&l6=PM_ADSIZE_HEIGHT&source_id=56cd1de15d25bf083ddf7a4b&f1=222261&f2=222262&f3=222263" target="_blank" rel="noopener">lsyncd</a></p><h4 id="cron"><a href="#cron" class="headerlink" title="cron"></a>cron</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局性计划任务时，修改/etc/crontab或者/etc/cron.d</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'* * * * * root cd /usr/local/mymon &amp;&amp; ./mymon -c etc/myMon.cfg'</span> &gt; /etc/cron.d/mymon</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写脚本时先判断</span></span><br><span class="line">[ -f /etc/cron.d/n9e ] || <span class="built_in">echo</span> <span class="string">'* * * * * root cd /usr/local/n9e-agent/;./control start &amp;&gt; /dev/null'</span> &gt; /etc/cron.d/n9e</span><br></pre></td></tr></table></figure><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><h4 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 锁定</span></span><br><span class="line">passwd -l user</span><br><span class="line"><span class="comment"># 解锁</span></span><br><span class="line">passwd -u user</span><br><span class="line"><span class="comment"># 强制下次登录修改密码</span></span><br><span class="line">passwd -f user</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Linux 常用命令
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://fearless11.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统命令</title>
    <link href="https://fearless11.github.io/2020/07/11/linux/cmd2_system/"/>
    <id>https://fearless11.github.io/2020/07/11/linux/cmd2_system/</id>
    <published>2020-07-11T03:00:00.000Z</published>
    <updated>2020-07-11T02:51:03.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统分析命令"><a href="#系统分析命令" class="headerlink" title="系统分析命令"></a>系统分析命令</h2><h3 id="Information"><a href="#Information" class="headerlink" title="Information"></a>Information</h3><h4 id="etc"><a href="#etc" class="headerlink" title="/etc"></a>/etc</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/os-release</span><br><span class="line">cat /etc/issues</span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">/usr/share/zoneinfo/Asia/Shanghai  <span class="comment"># 时区</span></span><br></pre></td></tr></table></figure><h4 id="proc"><a href="#proc" class="headerlink" title="/proc"></a>/proc</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/version</span><br><span class="line">cat /proc/cpuinfo  </span><br><span class="line">cat /proc/memoryinfo</span><br><span class="line">cat /proc/net/sockstat</span><br><span class="line">cat /proc/mounts</span><br></pre></td></tr></table></figure><h4 id="uname"><a href="#uname" class="headerlink" title="uname"></a>uname</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">uname -a     <span class="comment"># 查看所有</span></span><br><span class="line">uname -r     <span class="comment"># 查看内核版本</span></span><br><span class="line">3.10.0-514.21.1.el7.x86_64 </span><br><span class="line">Linux 3.10.0-514.21.1.el7.x86_64 (VM_0_99_centos)</span><br></pre></td></tr></table></figure><h4 id="lsb-release"><a href="#lsb-release" class="headerlink" title="lsb_release"></a>lsb_release</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum provides lsb_release        <span class="comment"># 查看提供命令的包</span></span><br><span class="line">yum install redhat-lsb-core -y  <span class="comment"># 安装包</span></span><br><span class="line">lsb_release -a                  <span class="comment"># linux系统版本</span></span><br></pre></td></tr></table></figure><h4 id="getconf"><a href="#getconf" class="headerlink" title="getconf"></a>getconf</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getconf LONG_BIT     <span class="comment"># 查看64位还是32位</span></span><br></pre></td></tr></table></figure><h4 id="getenforce"><a href="#getenforce" class="headerlink" title="getenforce"></a>getenforce</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getenforce     <span class="comment"># 临时修改</span></span><br><span class="line">setenforce 0   <span class="comment"># 永久修改</span></span><br><span class="line">sed -i <span class="string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config</span><br></pre></td></tr></table></figure><h4 id="dmidecode"><a href="#dmidecode" class="headerlink" title="dmidecode"></a>dmidecode</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dmidecode | grep Name  <span class="comment"># 查看物理机还是虚拟机</span></span><br></pre></td></tr></table></figure><h4 id="systctl"><a href="#systctl" class="headerlink" title="systctl"></a>systctl</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sysctl - configure kernel parameters at runtime</span></span><br><span class="line"><span class="comment"># 对应/proc/sys目录</span></span><br><span class="line"><span class="comment"># 例如：/proc/sys/net/ipv4/tcp_invalid_ratelimit</span></span><br><span class="line"><span class="comment"># 对应：net.ipv4.tcp_invalid_ratelimit = 500</span></span><br><span class="line"><span class="comment"># 查看所有</span></span><br><span class="line">/sbin/sysctl -a                   </span><br><span class="line"><span class="comment"># 正则查看</span></span><br><span class="line">/sbin/sysctl -a --pattern forward</span><br><span class="line">/sbin/sysctl -a --pattern forward$</span><br><span class="line">/sbin/sysctl -a --pattern <span class="string">'net.ipv4.conf.(eth|wlan)0.arp'</span></span><br><span class="line">/sbin/sysctl --system --pattern <span class="string">'^net.ipv6'</span></span><br><span class="line"><span class="comment"># 查看某个值</span></span><br><span class="line">/sbin/sysctl -n kernel.hostname</span><br><span class="line"><span class="comment"># 改某个值</span></span><br><span class="line">/sbin/sysctl -w kernel.domainname=<span class="string">"example.com"</span></span><br><span class="line"><span class="comment"># 根据文件更改</span></span><br><span class="line">/sbin/sysctl -p /etc/sysctl.conf</span><br></pre></td></tr></table></figure><h3 id="hardward"><a href="#hardward" class="headerlink" title="hardward"></a>hardward</h3><h4 id="ipcs"><a href="#ipcs" class="headerlink" title="ipcs"></a>ipcs</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看系统进程通信IPC</span></span><br><span class="line"><span class="comment"># 查看系统信号量限制</span></span><br><span class="line">ipcs -ls</span><br><span class="line"><span class="comment"># 查看系统信号量使用情况</span></span><br><span class="line">ipcs -s</span><br><span class="line"><span class="comment"># 查看使用某信号量的pid</span></span><br><span class="line">ipcs -s -i semid</span><br><span class="line"><span class="comment"># 删除某个泄露的信号量 pid找不到对应进程</span></span><br><span class="line">ipcrm -s semid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时调整系统限制    对应关系如下</span></span><br><span class="line">sysctl -w kernel.sem=<span class="string">"262 32000 250 128"</span></span><br><span class="line"><span class="comment"># ipcs -ls</span></span><br><span class="line">------ Semaphore Limits --------</span><br><span class="line">max number of arrays = 128</span><br><span class="line">max semaphores per array = 262</span><br><span class="line">max semaphores system wide = 32000</span><br><span class="line">max ops per semop call = 250</span><br><span class="line">semaphore max value = 32767</span><br><span class="line"></span><br><span class="line"><span class="comment"># zabbix占用的泄露的信号</span></span><br><span class="line"><span class="comment"># ipcs -s|grep zabbix | awk '&#123;print $2&#125;' | xargs -I&#123;&#125; ipcrm -s &#123;&#125;</span></span><br></pre></td></tr></table></figure><h4 id="omreport"><a href="#omreport" class="headerlink" title="omreport"></a>omreport</h4><p><a href="http://linux.dell.com/repo/hardware/OMSA_7.4.0/" target="_blank" rel="noopener">http://linux.dell.com/repo/hardware/OMSA_7.4.0/</a></p><p><a href="https://blog.csdn.net/a226433955/article/details/101145936" target="_blank" rel="noopener">omreport查看硬盘信息</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 戴尔服务器使用omreport（OMSA）查看监控硬件信息 （没用。。。）</span></span><br><span class="line">wget -q -O - http://linux.dell.com/repo/hardware/OMSA_7.4.0/bootstrap.cgi | bash</span><br><span class="line"><span class="comment"># 关键  /etc/yum.repos.d/dell-system-update.repo</span></span><br><span class="line">yum install -y srvadmin-all </span><br><span class="line">ln -s  /opt/dell/srvadmin/sbin/omreport /usr/bin/omreport</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主要组件的常规</span></span><br><span class="line">omreport chassis</span><br><span class="line"><span class="comment"># 内存</span></span><br><span class="line">omreport chassis memory </span><br><span class="line"><span class="comment"># 组件温度</span></span><br><span class="line">omreport chassis temps</span><br><span class="line"><span class="comment"># 磁盘陈列</span></span><br><span class="line">omreport storage adisk controller=0 </span><br><span class="line"><span class="comment"># 物理磁盘</span></span><br><span class="line">omreport storage pdisk controller=0 </span><br><span class="line"><span class="comment"># 虚拟硬盘</span></span><br><span class="line">omreport storage vdisk controller=0 </span><br><span class="line"><span class="comment"># 控制器(即RAID卡)的属性</span></span><br><span class="line">omreport storage controller</span><br><span class="line"><span class="comment"># enclosure的属性</span></span><br><span class="line">omreport storage enclosure controller=0 </span><br><span class="line"><span class="comment"># 电池</span></span><br><span class="line">omreport storage battery </span><br><span class="line"><span class="comment"># 格式化 -fmt</span></span><br><span class="line">omreport chassis info -fmt ssv</span><br><span class="line">omreport storage controller -fmt ssv</span><br></pre></td></tr></table></figure><h3 id="cpu（usage、status）"><a href="#cpu（usage、status）" class="headerlink" title="cpu（usage、status）"></a>cpu（usage、status）</h3><h4 id="nproc"><a href="#nproc" class="headerlink" title="nproc"></a>nproc</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cpu的核心数</span></span><br><span class="line">nproc</span><br></pre></td></tr></table></figure><h4 id="lscpu"><a href="#lscpu" class="headerlink" title="lscpu"></a>lscpu</h4><h4 id="dstat"><a href="#dstat" class="headerlink" title="dstat"></a>dstat</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计系统资源</span></span><br><span class="line">dstat -c           <span class="comment"># 查看cpu资源</span></span><br><span class="line">dstat --top-cpu    <span class="comment"># 占用cpu最多的进程</span></span><br></pre></td></tr></table></figure><h4 id="mpstat"><a href="#mpstat" class="headerlink" title="mpstat"></a>mpstat</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报告每个内核相关状态</span></span><br><span class="line">mpstat           <span class="comment"># 总的cpu内核信息</span></span><br><span class="line">mpstat -P ALL    <span class="comment"># 每个cpu信息</span></span><br><span class="line"></span><br><span class="line">%usr     用户空间</span><br><span class="line">%nice    调整nice值的用户空间</span><br><span class="line">%sys     内核空间</span><br><span class="line">%iowait  cpu空闲，等待i/o请求</span><br><span class="line">%irq     硬中断</span><br><span class="line">%soft    软中断</span><br><span class="line">%steal   运行虚拟机时，虚拟机分配的cpu占比</span><br><span class="line">%guest   虚拟机中进程用cpu的占比</span><br><span class="line">%gnice   虚拟机中nic进程用cpu占比</span><br><span class="line">%idle    cpu空闲，不包括i/o请求</span><br></pre></td></tr></table></figure><h3 id="内存memory-（usage、swap）"><a href="#内存memory-（usage、swap）" class="headerlink" title="内存memory （usage、swap）"></a>内存memory （usage、swap）</h3><h4 id="free"><a href="#free" class="headerlink" title="free"></a>free</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示内存使用情况</span></span><br><span class="line">free  -m       <span class="comment"># 单位M</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># buff/cache/swap</span></span><br><span class="line">buff    提高吞吐，比如磁盘写入    （ sync手动刷新buff ）</span><br><span class="line">cache   加快速度，提高命中率，比如cpu的cache （可释放）</span><br><span class="line">swap    虚拟内存。把硬盘上空间当成内存用，当内存不足时，将内存中不常用的刷到硬盘，腾空间，等需要时取回</span><br><span class="line"></span><br><span class="line"><span class="comment"># cache释放 （坑：内核2.6上无法改回0，除非重启）</span></span><br><span class="line">sync; <span class="built_in">echo</span> 1 &gt; /proc/sys/vm/drop_caches  <span class="comment"># 释放pagecache</span></span><br><span class="line">sync; <span class="built_in">echo</span> 2 &gt; /proc/sys/vm/drop_caches  <span class="comment"># 释放dentries和 inodes</span></span><br><span class="line">sync; <span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches  <span class="comment"># 释放pagecache，dentries 和 inodes：</span></span><br><span class="line">sync; <span class="built_in">echo</span> 0 &gt; /proc/sys/vm/drop_caches  <span class="comment"># 默认0为不释放，让系统自己调节</span></span><br></pre></td></tr></table></figure><h3 id="磁盘disk-（usage、IO）"><a href="#磁盘disk-（usage、IO）" class="headerlink" title="磁盘disk （usage、IO）"></a>磁盘disk （usage、IO）</h3><h4 id="df"><a href="#df" class="headerlink" title="df"></a>df</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计文件系统的实用情况</span></span><br><span class="line">df -Th       <span class="comment"># 统计文件系统类型及系统usage</span></span><br><span class="line">df -ih       <span class="comment"># inode的使用情况</span></span><br></pre></td></tr></table></figure><h4 id="LVM"><a href="#LVM" class="headerlink" title="LVM"></a>LVM</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 思路： pv --- vg --- lv --- mount</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展lv后重新加载生效</span></span><br><span class="line">lvremove /dev/cl/home</span><br><span class="line">lvextend -L +900GB /dev/cl/root </span><br><span class="line"><span class="comment"># resize2fs /dev/cl/root  报错Bad magic number in super-block</span></span><br><span class="line"><span class="comment"># cat /etc/fstab | grep centos-home</span></span><br><span class="line"><span class="comment"># /dev/mapper/cl-root     /   xfs     defaults        0 0</span></span><br><span class="line"><span class="comment"># 重新加载</span></span><br><span class="line">xfs_growfs /dev/cl/root</span><br><span class="line"></span><br><span class="line"><span class="comment">#### 卸载lvm</span></span><br><span class="line">umount data</span><br><span class="line"><span class="comment"># 移除lv</span></span><br><span class="line">lvremove /dev/vg0/lv0</span><br><span class="line">vgdisplay</span><br><span class="line"><span class="comment"># 移除vg</span></span><br><span class="line">vgremove vg0</span><br><span class="line">vgscan</span><br><span class="line"><span class="comment"># 移除pv</span></span><br><span class="line">pvremove /dev/vdb1</span><br><span class="line"><span class="comment"># 删除自动挂载</span></span><br><span class="line">vim /etc/fstab</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#磁盘格式化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#判断vdb是否已挂载</span></span><br><span class="line">df -h|grep vdb</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m vdb has been mounted \033[0m"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">'n\n\n\n\n\nt\n8e\nw\n'</span> | sudo fdisk /dev/vdb</span><br><span class="line">sudo pvcreate /dev/vdb1</span><br><span class="line"><span class="comment">#判断vg0和lv0是否存在</span></span><br><span class="line">ls /dev/mapper/|grep vg0 || ls /dev/mapper/|grep lv0</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m vg0 or lv0 exists. \033[0m"</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sudo vgcreate vg0 /dev/vdb1</span><br><span class="line">sudo lvcreate -n lv0 vg0 -l 100%VG</span><br><span class="line">sudo mkfs.xfs -n ftype=1 /dev/mapper/vg0-lv0</span><br><span class="line">sudo mkdir -p /data</span><br><span class="line">cat /etc/fstab|grep vg0-lv0</span><br><span class="line"><span class="keyword">if</span> [ $? != 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"/dev/mapper/vg0-lv0            /data                xfs        defaults              0 0"</span> | sudo tee -a /etc/fstab</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sudo mount -a</span><br><span class="line">df -h|grep vg0</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[31m vdb format to lvm successfully. \033[0m"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><h4 id="iostat"><a href="#iostat" class="headerlink" title="iostat"></a>iostat</h4><h4 id="vmstat"><a href="#vmstat" class="headerlink" title="vmstat"></a>vmstat</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报告虚拟机状态</span></span><br><span class="line">vmstat -t 1 5 <span class="comment"># -t在末尾显示时间戳，间隔1s，共采集5次数据</span></span><br><span class="line">vmstat -d     <span class="comment"># 查看每一块磁盘读写状况</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># proc</span></span><br><span class="line">r   可运行的进程数 （运行或在等待运行的）</span><br><span class="line">b   不可中断的进程数</span><br></pre></td></tr></table></figure><h3 id="网络network-（flux、status）"><a href="#网络network-（flux、status）" class="headerlink" title="网络network （flux、status）"></a>网络network （flux、status）</h3><h4 id="brctl"><a href="#brctl" class="headerlink" title="brctl"></a>brctl</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看桥接到宿主机器的情况</span></span><br><span class="line">brctl show</span><br></pre></td></tr></table></figure><h4 id="ethtool"><a href="#ethtool" class="headerlink" title="ethtool"></a>ethtool</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># query or control network driver and hardware settings</span></span><br></pre></td></tr></table></figure><h4 id="lspci"><a href="#lspci" class="headerlink" title="lspci"></a>lspci</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># list all PCI devices</span></span><br></pre></td></tr></table></figure><h4 id="host"><a href="#host" class="headerlink" title="host"></a>host</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 名字解析器 （namesever可配置三个）</span></span><br><span class="line">cat /etc/resolv.conf</span><br><span class="line">nameserver 8.8.8.8      //google服务器</span><br><span class="line">nameserver 8.8.4.4      //google备用服务器</span><br><span class="line">domain tuc.noao.edu     //不完全域名自动补充后缀</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询域名对应的ip</span></span><br><span class="line">host -v www.baidu.com</span><br></pre></td></tr></table></figure><h4 id="fping"><a href="#fping" class="headerlink" title="fping"></a>fping</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fping </span><br><span class="line"> -A    将目标地址以ip显示</span><br><span class="line"> -u    显示不可达的目标</span><br><span class="line"> -c n  ping探测次数</span><br><span class="line"> </span><br><span class="line"><span class="comment"># fping -A -u -c 4 192.168.1.1 192.168.1.20</span></span><br><span class="line">192.168.1.1  : xmt/rcv/%loss = 4/4/0%, min/avg/max = 1.54/2.30/4.32</span><br><span class="line">192.168.1.20 : xmt/rcv/%loss = 4/4/0%, min/avg/max = 0.07/0.07/0.08</span><br></pre></td></tr></table></figure><h4 id="ifconfig"><a href="#ifconfig" class="headerlink" title="ifconfig"></a>ifconfig</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取网卡IP</span></span><br><span class="line">/sbin/ifconfig `/sbin/route|grep <span class="string">'^default'</span>|awk <span class="string">'&#123;print $NF&#125;'</span>`|grep inet|awk <span class="string">'&#123;print $2&#125;'</span>|awk -F <span class="string">':'</span> <span class="string">'&#123;print $NF&#125;'</span>|head -n 1</span><br></pre></td></tr></table></figure><h4 id="nc"><a href="#nc" class="headerlink" title="nc"></a>nc</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">watch nc -v 192.168.1.43 40002 -w 1</span><br><span class="line">nc -w1 -u 10.11.100.19 514 &lt;&lt;&lt; <span class="string">"&lt;15&gt;logging from remote by UDP 514"</span>                        <span class="comment"># 远程写rsyslog日志</span></span><br><span class="line">logger -p user.info <span class="string">"testing 123"</span>  <span class="comment"># 本地写rsyslog日志</span></span><br></pre></td></tr></table></figure><h4 id="mtr"><a href="#mtr" class="headerlink" title="mtr"></a>mtr</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mtr 10.10.10.145   <span class="comment"># 追踪路由</span></span><br></pre></td></tr></table></figure><h4 id="ss"><a href="#ss" class="headerlink" title="ss"></a>ss</h4><h4 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看tcp连接状态</span></span><br><span class="line">netstat -n  | awk <span class="string">'/^tcp/&#123;++S[$NF]&#125;END&#123;for(a in S) print a,S[a]&#125;'</span></span><br></pre></td></tr></table></figure><h4 id="nethogs"><a href="#nethogs" class="headerlink" title="nethogs"></a>nethogs</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 每个进程的网络带宽  （类似top）</span></span><br><span class="line">yum install nethogs -y  <span class="comment"># 安装</span></span><br><span class="line">nethogs -d 1            <span class="comment"># 指定刷新间隔1s</span></span><br><span class="line">nethogs em1             <span class="comment"># 查看某个网卡设备</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 交互式操作</span></span><br><span class="line">m  改变查看模式 KB/s KB MB B</span><br><span class="line">r  接收字节排序</span><br><span class="line">s  发送字节排序</span><br><span class="line">q  退出</span><br></pre></td></tr></table></figure><h4 id="iftop"><a href="#iftop" class="headerlink" title="iftop"></a>iftop</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 实时流量监控工具</span></span><br><span class="line">yum install epel-release -y</span><br><span class="line">yum install iftop -y</span><br><span class="line">-P 混杂promiscuous模式，机器网卡接收经过它的数据流，不论目的地址是否是它</span><br><span class="line">-i 设定监测的网卡，如：<span class="comment"># iftop -i eth1</span></span><br><span class="line">-B 以bytes为单位显示流量(默认是bits)，如：<span class="comment"># iftop -B</span></span><br><span class="line">-n 使host信息默认直接都显示IP，如：<span class="comment"># iftop -n</span></span><br><span class="line">-N 使端口信息默认直接都显示端口号，如: <span class="comment"># iftop -N</span></span><br><span class="line">-P 显示所有主机所有端口</span><br><span class="line">-t 非交互式</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明</span></span><br><span class="line">中间的&lt;= =&gt;这两个左右箭头，表示的是流量的方向。</span><br><span class="line">TX：发送流量</span><br><span class="line">RX：接收流量</span><br><span class="line">TOTAL：总流量</span><br><span class="line">Cumm：运行iftop到目前时间的总流量</span><br><span class="line">peak：流量峰值</span><br><span class="line">rates：分别表示过去 2s 10s 40s 的平均流量</span><br><span class="line"></span><br><span class="line"><span class="comment"># 交互式操作</span></span><br><span class="line">1/2/3 按第一列2s/第二列10s/第三列40s排序</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常用</span></span><br><span class="line">iftop -PnN -i bond1</span><br><span class="line">iftop -tNPn -i bond1 -o 2s <span class="comment"># 屏幕输出，按第一列排序</span></span><br></pre></td></tr></table></figure><h4 id="socat"><a href="#socat" class="headerlink" title="socat"></a>socat</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://www.dest-unreach.org/socat/download/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网络打通工具，建立数据通道，支持多协议连接 </span></span><br><span class="line">nohup输出到指定文件</span><br><span class="line">nohup socat -T 600 UDP4-LISTEN:9996,reuseaddr,fork UDP4:10.21.16.51:9996  &gt;&gt; /root/socat.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h4 id="rinetd"><a href="#rinetd" class="headerlink" title="rinetd"></a>rinetd</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网络打通工具</span></span><br><span class="line">https://boutell.com/rinetd/</span><br><span class="line"></span><br><span class="line"><span class="comment">#vim /etc/rinetd.conf</span></span><br><span class="line"><span class="comment">#将所有发往本机8080端口的请求转发到172.19.94.3的8080端口</span></span><br><span class="line">0.0.0.0 8080 172.19.94.3 8080</span><br><span class="line"></span><br><span class="line">rinetd -c /etc/rinetd.conf   <span class="comment">#启动转发</span></span><br><span class="line">pkill rinetd                 <span class="comment">#关闭进程</span></span><br></pre></td></tr></table></figure><h3 id="进程process"><a href="#进程process" class="headerlink" title="进程process"></a>进程process</h3><h4 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># PROCESS STATE CODES</span></span><br><span class="line">  D   uninterruptible sleep (usually IO)</span><br><span class="line">  R   runnable (on run queue)</span><br><span class="line">  S   sleeping</span><br><span class="line">  T   traced or stopped</span><br><span class="line">  Z   a defunct (<span class="string">"zombie"</span>) process</span><br></pre></td></tr></table></figure><h4 id="lsof"><a href="#lsof" class="headerlink" title="lsof"></a>lsof</h4><p><a href="https://blog.csdn.net/kozazyh/article/details/5495532" target="_blank" rel="noopener">lsof</a></p><h4 id="top"><a href="#top" class="headerlink" title="top"></a>top</h4><p><a href="https://www.cnblogs.com/xuxm2007/archive/2012/06/05/2536294.html" target="_blank" rel="noopener">top</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看进程打开的所有文件</span></span><br><span class="line">lsof -p pid</span><br></pre></td></tr></table></figure><h4 id="sar"><a href="#sar" class="headerlink" title="sar"></a>sar</h4><h4 id="jstat-amp-jmap"><a href="#jstat-amp-jmap" class="headerlink" title="jstat &amp; jmap"></a>jstat &amp; jmap</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># java在GC时处理</span></span><br><span class="line">jstat -gcutil 11867 1 10</span><br><span class="line">jmap -histo 11867</span><br></pre></td></tr></table></figure><h3 id="压测"><a href="#压测" class="headerlink" title="压测"></a>压测</h3><h4 id="sysbench"><a href="#sysbench" class="headerlink" title="sysbench"></a>sysbench</h4><h4 id="fio"><a href="#fio" class="headerlink" title="fio"></a>fio</h4><h4 id="tpcc"><a href="#tpcc" class="headerlink" title="tpcc"></a>tpcc</h4>]]></content>
    
    <summary type="html">
    
      Linux 系统命令
    
    </summary>
    
    
    
      <category term="Linux" scheme="https://fearless11.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>python3(一)入门</title>
    <link href="https://fearless11.github.io/2020/07/05/python/py1-tour/"/>
    <id>https://fearless11.github.io/2020/07/05/python/py1-tour/</id>
    <published>2020-07-05T05:00:00.000Z</published>
    <updated>2020-07-05T08:11:12.458Z</updated>
    
    <content type="html"><![CDATA[<h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>动态解释型语言</li><li>应用领域：爬虫、机器学习、运维开发</li></ul><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li><p>下载python安装包 </p><p><a href="https://www.python.org/downloads/release/python-368" target="_blank" rel="noopener">https://www.python.org/downloads/</a><br><a href="https://npm.taobao.org/mirrors/python/" target="_blank" rel="noopener">镜像源https://npm.taobao.org/mirrors/python</a></p><ul><li><p>windows</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装时勾选添加到环境变量，安装到    D:\Program Files (x86)\python</span></span><br><span class="line">https://www.python.org/ftp/python/3.8.    3/  python-3.8.3.exe</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者手动添加环境变量</span></span><br><span class="line">桌面右击我的电脑 -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 用户变量 -&gt; Path变量编辑 -&gt; 新建</span><br><span class="line">D:\Program Files (x86)\python\Scripts\</span><br><span class="line">D:\Program Files (x86)\python\</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 </span></span><br><span class="line">win+R -&gt; cmd —&gt; python3</span><br></pre></td></tr></table></figure><ul><li><p>mac</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wget https://npm.taobao.org/mirrors/python/3.6.8/python-3.6.8-macosx10.6.pkg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击安装验证</span></span><br><span class="line">python3</span><br><span class="line">pip3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装django</span></span><br><span class="line">pip3 install django</span><br><span class="line">pip3 install django=x.x.x <span class="comment">#版本</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>下载vscode编辑器 <a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">https://code.visualstudio.com/Download</a></p><ul><li><p>安装python插件并配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插件</span></span><br><span class="line">快捷键F1或ctrl+<span class="built_in">shift</span>+p ——&gt; 输入命令 Extensions:Install Extension —&gt; 插件管理搜索python安装启用</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置工作空间 .vscode/settings.json</span></span><br><span class="line"><span class="comment"># python部分 </span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">"python.pythonPath"</span>: <span class="string">"/usr/local/bin/python3"</span>,</span><br><span class="line">   <span class="string">"python.pipenvPath"</span>: <span class="string">"/usr/local/bin/pip3"</span>,</span><br><span class="line">   <span class="string">"python.linting.flake8Enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">   <span class="string">"python.formatting.provider"</span>: <span class="string">"yapf"</span>,</span><br><span class="line">   <span class="string">"python.linting.flake8Args"</span>: [</span><br><span class="line">       <span class="string">"--max-line-length=248"</span></span><br><span class="line">   ],</span><br><span class="line">   <span class="string">"python.linting.pylintEnabled"</span>: <span class="literal">false</span>,</span><br><span class="line">   <span class="string">"python.linting.enabled"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>安装python工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查安装好的第三方包</span></span><br><span class="line">pip3 list    </span><br><span class="line"><span class="comment"># flake8检查编写代码不规范和语法错误</span></span><br><span class="line">pip3 install flake8  </span><br><span class="line"><span class="comment"># yapf格式化工具</span></span><br><span class="line">pip3 install yapf</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="入门教程"><a href="#入门教程" class="headerlink" title="入门教程"></a>入门教程</h3><ul><li>菜鸟教程python3 <a href="https://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/python3/python3-tutorial.html</a></li></ul><h3 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料"></a>其他资料</h3><ul><li><a href="https://www.djangoproject.com/" target="_blank" rel="noopener">django框架 https://www.djangoproject.com/</a></li><li><a href="http://c.biancheng.net/django/" target="_blank" rel="noopener">django框架基础教程 http://c.biancheng.net/django/</a></li></ul>]]></content>
    
    <summary type="html">
    
      python3简介
    
    </summary>
    
    
    
      <category term="python3" scheme="https://fearless11.github.io/tags/python3/"/>
    
  </entry>
  
  <entry>
    <title>golang(一)入门</title>
    <link href="https://fearless11.github.io/2020/07/05/go/go1-tour/"/>
    <id>https://fearless11.github.io/2020/07/05/go/go1-tour/</id>
    <published>2020-07-05T01:00:00.000Z</published>
    <updated>2020-07-05T06:12:29.552Z</updated>
    
    <content type="html"><![CDATA[<h3 id="起源"><a href="#起源" class="headerlink" title="起源"></a>起源</h3><ul><li>2007年开始，2009年11月官方发布。</li><li>Google开源，由Robert Griesemer，Rob Pike 和Ken Thompson开发。</li></ul><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>静态型编译，打包二进制后即可运行</li><li>goroutine协程，一个线程可执行多个goroutine，由go的逻辑处理器调度，资源占用少可高并发</li><li>channel通道，不要通过共享内存来通信，而应该通过通信来共享内存</li><li>函数是一等公民</li><li>组合结构体，实现代码复用，不同结构体之间的合作</li><li>接口，实现接口的所有方法则实现了接口本身</li></ul><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><ul><li><p>下载golang安装包 <a href="https://studygolang.com/dl" target="_blank" rel="noopener">https://studygolang.com/dl</a></p><ul><li><p>windows</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 </span></span><br><span class="line">https://studygolang.com/dl/golang/go1.14.4.windows-amd64.zip</span><br><span class="line"><span class="comment"># 解压路径</span></span><br><span class="line">D:\Program Files (x86)\</span><br><span class="line"><span class="comment"># 添加windows变量</span></span><br><span class="line">桌面 -&gt; 我的电脑(右击) -&gt; 属性 -&gt; 高级系统设置 -&gt; 环境变量 -&gt; 用户变量 -&gt; 新建：</span><br><span class="line">  GOROOT D:\Program Files (x86)\go</span><br><span class="line">  GOPATH D:\gohome</span><br><span class="line">  GO111MODULE on</span><br><span class="line">  GOPROXY https://mirrors.aliyun.com/goproxy/</span><br><span class="line"><span class="comment"># 编辑Path变量</span></span><br><span class="line">Path变量编辑 -&gt; 新建：</span><br><span class="line">%GOROOT%\bin</span><br><span class="line">%GOPATH%\bin</span><br><span class="line"><span class="comment"># 命令查看验证</span></span><br><span class="line">win+R -&gt; cmd -&gt; go version</span><br></pre></td></tr></table></figure></li><li><p>mac</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget https://studygolang.com/dl/golang/go1.14.4.darwin-amd64.tar.gz</span><br><span class="line">tar xf go1.14.4.darwin-amd64.tar.gz -C /usr/<span class="built_in">local</span></span><br><span class="line">mkdir -p /data/go/src</span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line"><span class="comment"># root用户</span></span><br><span class="line">cp /etc/profile /home</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOROOT=/usr/local/go'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOPATH=/data/go'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GO111MODULE=on'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOPROXY=https://mirrors.aliyun.com/goproxy/'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="comment"># 普通用户</span></span><br><span class="line">cp ~/.bash_profile /home</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOROOT=/usr/local/go'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOPATH=/data/go'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GO111MODULE=on'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOPROXY=https://mirrors.aliyun.com/goproxy/'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Source ~/.bash_profile'</span> &gt;  ~/.zshrc</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">go env</span><br></pre></td></tr></table></figure></li><li><p>linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wget https://studygolang.com/dl/golang/go1.14.4.linux-amd64.tar.gz</span><br><span class="line">tar xf go1.14.4.linux-amd64.tar.gz -C /usr/<span class="built_in">local</span></span><br><span class="line">mkdir -p /opt/go/src</span><br><span class="line">cp /etc/profile /home</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOROOT=/usr/local/go'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOPATH=/opt/go'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export GOPROXY=https://mirrors.aliyun.com/goproxy/'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$PATH:$GOROOT/bin:$GOPATH/bin'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">go env</span><br></pre></td></tr></table></figure></li></ul></li><li><p>下载vscode编辑器 <a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">https://code.visualstudio.com/Download</a></p><ul><li><p>安装golang插件并配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">快捷键 F1或ctrl+<span class="built_in">shift</span>+p ——&gt; 输入命令 Extensions:Install Extension ——&gt; 插件管理搜索go后安装</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">菜单 — Preferences — User - Extensions - Go - Edit <span class="keyword">in</span> settings.json</span><br><span class="line"><span class="comment"># windows环境 用户空间  user/settings.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"go.goroot"</span>: <span class="string">"/usr/local/go"</span>,</span><br><span class="line">    <span class="string">"go.gopath"</span>: <span class="string">"/data/go"</span>,</span><br><span class="line">    <span class="string">"go.buildOnSave"</span>: <span class="string">"package"</span>,</span><br><span class="line">    <span class="string">"go.lintOnSave"</span>: <span class="string">"package"</span>,</span><br><span class="line">    <span class="string">"go.formatTool"</span>: <span class="string">"goimports"</span>,      </span><br><span class="line">    <span class="string">"go.gocodeAutoBuild"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"go.useGoProxyToCheckForToolUpdates"</span>:<span class="literal">true</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 工作空间 F5进行调试，调试配置 .vscode/launch.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="string">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"Launch"</span>,</span><br><span class="line">            <span class="string">"type"</span>: <span class="string">"go"</span>,</span><br><span class="line">            <span class="string">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="string">"mode"</span>: <span class="string">"auto"</span>,</span><br><span class="line">            <span class="string">"stopOnEntry"</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">"program"</span>: <span class="string">"<span class="variable">$&#123;fileDirname&#125;</span>"</span>,</span><br><span class="line">            <span class="string">"env"</span>: &#123;&#125;,</span><br><span class="line">            <span class="string">"args"</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>安装go的工具 <a href="https://github.com/golang" target="_blank" rel="noopener">https://github.com/golang</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vscode会提示下载安装，会出现安装失败的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接手动下载安装</span></span><br><span class="line">go get -u -v  github.com/mdempsky/gocode </span><br><span class="line">go get -u -v  github.com/uudashr/gopkgs/cmd/gopkgs </span><br><span class="line">go get -u -v  github.com/ramya-rao<span class="_">-a</span>/go-outline  </span><br><span class="line">go get -u -v  github.com/acroca/go-symbols  </span><br><span class="line">go get -u -v  github.com/go-delve/delve/cmd/dlv  </span><br><span class="line">go get -u -v  github.com/rogpeppe/godef</span><br><span class="line">go get -u -v  github.com/sqs/goreturns  </span><br><span class="line">go get -u -v  github.com/cweill/gotests</span><br><span class="line">go get -u -v  github.com/godoctor/godoctor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 被墙的，先在下载再安装。也可以设置代理解决</span></span><br><span class="line">mkdir -p <span class="variable">$GOPATH</span>/src/golang.org/x</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/golang.org/x</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/golang/tools.git tools</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/golang/lint.git lint</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/golang/net.git net</span><br><span class="line"></span><br><span class="line">go install golang.org/x/tools/cmd/guru</span><br><span class="line">go install golang.org/x/tools/cmd/gorename</span><br><span class="line">go install golang.org/x/lint/golint</span><br><span class="line">go install golang.org/x/net/gonet</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="入门教程"><a href="#入门教程" class="headerlink" title="入门教程"></a>入门教程</h3><ul><li><p>Go指南 <a href="http://tour.studygolang.com/welcome/1" target="_blank" rel="noopener">http://tour.studygolang.com</a></p><ul><li>离线查看<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 中文版</span></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line"><span class="built_in">export</span> GO111MODULE=on</span><br><span class="line">go get -u -v github.com/Go-zh/tour/gotour tour</span><br><span class="line">rm -rfv /data/go/src/golang.org/x/tour</span><br><span class="line">cp -rfv /data/go/pkg/mod/github.com/\!go-zh/tour\@v0.0.0-20190515134539-b61130663b4d  /data/go/src/golang.org/x/tour</span><br><span class="line"><span class="comment"># 启动 调用浏览器本地查看</span></span><br><span class="line">tour</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 英文版</span></span><br><span class="line"><span class="built_in">export</span> GO111MODULE=on</span><br><span class="line"><span class="built_in">export</span> GOPROXY=https://mirrors.aliyun.com/goproxy/</span><br><span class="line">go get -x -u -v golang.org/x/tour </span><br><span class="line">cp -rfv /data/go/pkg/mod/golang.org/x/tour\@v0.0.0-20200508155540-0608babe047d/ /data/go/src/</span><br><span class="line">tour</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Go例子 <a href="https://gobyexample.com/" target="_blank" rel="noopener">https://gobyexample.com/</a></p></li><li><p>Go规范 <a href="https://go-zh.org/doc/effective_go.html" target="_blank" rel="noopener">https://go-zh.org/doc/effective_go.html</a></p></li></ul><h3 id="其他资料（可选）"><a href="#其他资料（可选）" class="headerlink" title="其他资料（可选）"></a>其他资料（可选）</h3><p>基础</p><ul><li><a href="https://github.com/golang/go" target="_blank" rel="noopener">Go git</a></li><li><a href="https://go-zh.org/doc" target="_blank" rel="noopener">Go编程语言 go-zh.org</a></li><li><a href="https://godoc.org/" target="_blank" rel="noopener">Go文档 godoc.org</a> </li></ul><p>入门</p><ul><li><a href="https://tour.go-zh.org/list" target="_blank" rel="noopener">Go指南 tour.go-zh.org</a></li><li><a href="https://gobyexample.com/" target="_blank" rel="noopener">Go例子 gobyexample.com</a></li></ul><p>实用</p><ul><li><a href="https://go-zh.org/ref/spec.old" target="_blank" rel="noopener">Go编程语言规范 go-zh.org</a></li><li><a href="https://go-zh.org/doc/effective_go.html" target="_blank" rel="noopener">Go实效编程 go-zh.org</a></li><li><a href="https://bingohuang.gitbooks.io/effective-go-zh-en/" target="_blank" rel="noopener">Go实效编程 bingohuang.gitbooks.io</a></li><li><a href="https://github.com/golang/go/wiki/CodeReviewComments" target="_blank" rel="noopener">Go Gode Review Comments</a></li><li><a href="https://go-zh.org/cmd/go/" target="_blank" rel="noopener">Go cmd命令</a></li></ul><p>书籍</p><ul><li><a href="https://docs.hacknode.org/gopl-zh/ch0/ch0-01.html" target="_blank" rel="noopener">Go语言圣经</a></li><li><a href="https://github.com/unknwon/the-way-to-go_ZH_CN/blob/master/eBook/directory.md" target="_blank" rel="noopener">the-way-to-go-ZH_CN</a></li><li><a href="https://account.geekbang.org/dashboard/buy" target="_blank" rel="noopener">Go核心36讲-极客时间-郝林</a></li></ul><p>框架</p><ul><li><a href="https://github.com/gin-gonic/gin" target="_blank" rel="noopener">web gin</a></li><li><a href="https://github.com/astaxie/beego" target="_blank" rel="noopener">web beego</a></li><li><a href="https://gorm.io/docs/query.html" target="_blank" rel="noopener">db gorm</a> </li><li><a href="https://jasperxu.github.io/gorm-zh/" target="_blank" rel="noopener">db gorm/zh</a> </li></ul><p>网站</p><ul><li><a href="https://studygolang.com/dl" target="_blank" rel="noopener">go语言中文网 studygolang.com</a></li><li><a href="https://bytelang.com/online/run-code/golang" target="_blank" rel="noopener">Golang代码在线运行 bytelang.com</a></li></ul><p>博客</p><ul><li><a href="https://www.flysnow.org/" target="_blank" rel="noopener">博客 飞雪无情 www.flysnow.org</a></li><li><a href="https://blog.wolfogre.com" target="_blank" rel="noopener">博客 狼人 blog.wolfogre.com</a></li></ul><p>优秀的go项目</p><ul><li><a href="https://www.elastic.co/guide/en/beats/devguide/7.0/index.html" target="_blank" rel="noopener">beats社区</a></li><li><a href="https://github.com/grafana/grafana/blob/master/pkg/login/ldap_login.go" target="_blank" rel="noopener">grafana</a></li></ul>]]></content>
    
    <summary type="html">
    
      go简介
    
    </summary>
    
    
    
      <category term="go" scheme="https://fearless11.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>golang(一)风格</title>
    <link href="https://fearless11.github.io/2020/07/05/go/go2-style/"/>
    <id>https://fearless11.github.io/2020/07/05/go/go2-style/</id>
    <published>2020-07-05T01:00:00.000Z</published>
    <updated>2020-07-06T00:05:33.478Z</updated>
    
    <content type="html"><![CDATA[<h3 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h3>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gofmt xx.go</span><br></pre></td></tr></table></figure><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3>   <figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  </span></span><br><span class="line"><span class="comment">块注释</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="comment">// 行注释</span></span><br></pre></td></tr></table></figure><p>  注释生成文档<br>  <figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查看包内文档</span></span><br><span class="line"><span class="keyword">go</span> doc fmt Printf  <span class="comment">//fmt包中Printf的文档</span></span><br><span class="line"><span class="keyword">go</span> doc -src fmt Printf <span class="comment">//查看文档并包含源码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成在线文档</span></span><br><span class="line"><span class="comment">// 开启一个godoc小型server, -play可以使用playground运行Example代码</span></span><br><span class="line">godoc -http=:<span class="number">6060</span> -play</span><br></pre></td></tr></table></figure><br>   自定义包文档<br>   <figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在package, const, type, func等关键字上面并且紧邻关键字的注释才会被展示</span></span><br><span class="line"><span class="comment">// Package banana ... 超过3行在包中建doc.go</span></span><br><span class="line"> <span class="keyword">package</span> banana</span><br><span class="line"></span><br><span class="line"> <span class="comment">// Xyz ...</span></span><br><span class="line"> <span class="keyword">const</span> Xyz = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// Abc ...</span></span><br><span class="line"> <span class="keyword">type</span> Abc <span class="keyword">struct</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">// Bcd ...</span></span><br><span class="line"> <span class="function"><span class="keyword">func</span> <span class="title">Bcd</span><span class="params">()</span></span> &#123;&#125;</span><br></pre></td></tr></table></figure><br>   <figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// Example</span></span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">   文件 example_xxx_test.go</span></span><br><span class="line"><span class="comment">   包名 当前包名_test</span></span><br><span class="line"><span class="comment">   函数 func Example[FuncName][_tag]()</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 文件必须放在 banana包目录下, 名字必须为example_xxx_test.go</span></span><br><span class="line">   <span class="comment">// Package banana_test 为banana包的示例</span></span><br><span class="line">   <span class="keyword">package</span> banana_test</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 此注释将会被展示在页面上</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">Example</span><span class="params">()</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">"Hello OverView"</span>)</span><br><span class="line">        <span class="comment">// Output存在时将会展示输出结果</span></span><br><span class="line">        <span class="comment">// Output: </span></span><br><span class="line">        <span class="comment">// Hello OverView</span></span><br><span class="line">    &#125;</span><br><span class="line">   <span class="string">``</span><span class="string">`    </span></span><br><span class="line"><span class="string">### 命名</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">- 导出 首字符大写</span></span><br><span class="line"><span class="string">- 包名 小写单词且不应使用下划线或驼峰记法</span></span><br><span class="line"><span class="string">- 接口名 只包含一个方法的接口的名称加上-er后缀Reader</span></span><br><span class="line"><span class="string">- 驼峰记法 驼峰记法 MixedCaps 或 mixedCaps</span></span><br><span class="line"><span class="string">- 左括号 不应将一个控制结构（if、for、switch 或 select）的左大括号放在下一行</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">### defer</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">被推迟函数的实参（如果该函数为方法则还包括接收者）在推迟执行时就会求值， 而不是在调用执行时才求值。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>golang</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">5</span>; i++ &#123;</span><br><span class="line"><span class="keyword">defer</span> fmt.Printf(<span class="string">"%d "</span>, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4 3 2 1 0</span></span><br></pre></td></tr></table></figure></p><h3 id="new-amp-make"><a href="#new-amp-make" class="headerlink" title="new &amp; make"></a>new &amp; make</h3><ul><li>new 用来分配内存，不会初始化内存，只会将内存置零，并返回类型为 *T 的指针。</li><li>make 只用于创建切片、映射和信道，并返回类型为 T（而非 *T）的一个已初始化 （而非置零）的值。 </li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p *[]<span class="keyword">int</span> = <span class="built_in">new</span>([]<span class="keyword">int</span>)       <span class="comment">// 分配切片结构；*p == nil；基本没用</span></span><br><span class="line"><span class="keyword">var</span> v  []<span class="keyword">int</span> = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">100</span>) <span class="comment">// 切片 v 现在引用了一个具有 100 个 int 元素的新数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 没必要的复杂：</span></span><br><span class="line"><span class="keyword">var</span> p *[]<span class="keyword">int</span> = <span class="built_in">new</span>([]<span class="keyword">int</span>)</span><br><span class="line">*p = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 习惯用法：</span></span><br><span class="line">v := <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h3 id="形参"><a href="#形参" class="headerlink" title="形参"></a>形参</h3><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任意数量，任意类型的形参</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Println</span><span class="params">(v ...<span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line">std.Output(<span class="number">2</span>, fmt.Sprintln(v...)) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h3><p>枚举器 iota</p><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ByteSize <span class="keyword">float64</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    </span><br><span class="line">    _           = <span class="literal">iota</span>  <span class="comment">// 0</span></span><br><span class="line">    KB ByteSize = <span class="number">1</span> &lt;&lt; (<span class="number">10</span> * <span class="literal">iota</span>)  <span class="comment">// 1</span></span><br><span class="line">    MB</span><br><span class="line">    GB</span><br><span class="line">    TB</span><br><span class="line">    PB</span><br><span class="line">    EB</span><br><span class="line">    ZB</span><br><span class="line">    YB</span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      go规范
    
    </summary>
    
    
    
      <category term="go" scheme="https://fearless11.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>vscode插件</title>
    <link href="https://fearless11.github.io/2020/06/25/tools/vscode_plugin/"/>
    <id>https://fearless11.github.io/2020/06/25/tools/vscode_plugin/</id>
    <published>2020-06-24T22:47:00.000Z</published>
    <updated>2020-07-05T08:11:31.650Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vscode-plugin"><a href="#vscode-plugin" class="headerlink" title="vscode plugin"></a>vscode plugin</h2><p>   <a href="https://code.visualstudio.com/docs" target="_blank" rel="noopener">https://code.visualstudio.com/docs</a></p><h3 id="Remote-Development-远程开发调试"><a href="#Remote-Development-远程开发调试" class="headerlink" title="Remote Development 远程开发调试"></a>Remote Development 远程开发调试</h3><p><a href="https://www.jianshu.com/p/0f2fb935a9a1" target="_blank" rel="noopener">简书</a></p><ul><li><p>远程主机 <a href="https://code.visualstudio.com/docs/remote/troubleshooting#_installing-a-supported-ssh-server" target="_blank" rel="noopener">install ssh_server</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装ssh_server</span></span><br><span class="line"><span class="comment"># Debian 8+ / Ubuntu 16.04+</span></span><br><span class="line">sudo apt-get install openssh-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># RHEL / CentOS 7+</span></span><br><span class="line">sudo yum install openssh-server &amp;&amp; sudo systemctl start sshd.service &amp;&amp; sudo systemctl <span class="built_in">enable</span> sshd.service</span><br></pre></td></tr></table></figure></li><li><p>本地主机 <a href="https://code.visualstudio.com/docs/remote/troubleshooting#_installing-a-supported-ssh-client" target="_blank" rel="noopener">install ssh_client</a></p></li><li><p>免密登陆 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地主机生成id_rsa.pub </span></span><br><span class="line">ssk-keygen    <span class="comment"># 回车</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub </span><br><span class="line"><span class="comment">#ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC63//hcCLABAdyA4u1 haha@vera</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程主机保存id_rsa.pub到authorized_keys </span></span><br><span class="line">cat  ~/.ssh/authorized_keys </span><br><span class="line"><span class="comment">#ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC63//hcCLABAdyA4u1 haha@vera</span></span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>vscode配置</p><ul><li>安装插件: Remote Development</li><li>配置终端：ctrl+shift+p —&gt; Remote-SSH-Settings -&gt; 勾选Show Login Terminal</li><li>配置主机：ctrl+shift+p —&gt; Remote-SSH：Connect to Host -&gt; Configure SSH Hosts-&gt;选择一个config<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host VM-centos7</span><br><span class="line">    HostName 192.168.57.5</span><br><span class="line">    User root</span><br></pre></td></tr></table></figure></li><li>vscode左侧边框出现远程图标Remote Expoler： 选择配置好的VM-centos7右键登陆即可</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      vscode插件
    
    </summary>
    
    
    
      <category term="vscode" scheme="https://fearless11.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>Mac Chrome常用快捷键</title>
    <link href="https://fearless11.github.io/2020/06/25/tools/quick/"/>
    <id>https://fearless11.github.io/2020/06/25/tools/quick/</id>
    <published>2020-06-24T22:47:00.000Z</published>
    <updated>2020-07-05T07:59:20.389Z</updated>
    
    <content type="html"><![CDATA[<h3 id="标签页-amp-窗口"><a href="#标签页-amp-窗口" class="headerlink" title="标签页&amp;窗口"></a>标签页&amp;窗口</h3><table><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>打开新窗口</td><td>⌘ + n</td></tr><tr><td>在无痕模式下打开新窗口</td><td>⌘ + Shift + n</td></tr><tr><td>打开新的标签页</td><td>⌘ + t</td></tr><tr><td>重新打开最后关闭的标签页</td><td>⌘ + Shift + t</td></tr><tr><td>在当前标签页中打开主页</td><td>⌘ + Shift + h</td></tr><tr><td>跳转到特定标签页</td><td>⌘ + 1 到 ⌘ + 8</td></tr><tr><td>跳转到最后一个标签页</td><td>⌘ + 9</td></tr><tr><td>切换左边标签页</td><td>contrl + -&gt; 或   ⌘ + Shift + [</td></tr><tr><td>切换右边标签页</td><td>contrl + Shift + -&gt; 或 ⌘ + Shift + ]</td></tr><tr><td>回退到当前标签页浏览的上一个页面</td><td>⌘ + [</td></tr><tr><td>回退到当前标签页浏览的下一个页面</td><td>⌘ + ]</td></tr><tr><td>关闭当前标签页或弹出式窗口</td><td>⌘ + w</td></tr><tr><td>关闭当前窗口</td><td>⌘ + Shift + w</td></tr><tr><td>最小化窗口</td><td>⌘ + m</td></tr><tr><td>隐藏 Google Chrome</td><td>⌘ + h</td></tr><tr><td>退出 Google Chrome</td><td>⌘ + q</td></tr><tr><td>重新加载当前网页</td><td>⌘ + r</td></tr><tr><td>重新加载当前网页（忽略缓存的内容）</td><td>⌘ + Shift + r</td></tr><tr><td>停止加载网页</td><td>Esc</td></tr><tr><td>打印当前网页</td><td>⌘ + p</td></tr><tr><td>保存当前网页</td><td>⌘ + s</td></tr><tr><td>通过电子邮件发送当前网页</td><td>⌘ + Shift + i</td></tr></tbody></table><h3 id="查看-amp-搜索"><a href="#查看-amp-搜索" class="headerlink" title="查看&amp;搜索"></a>查看&amp;搜索</h3><table><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>开启或关闭全屏模式</td><td>⌘ + Ctrl + f</td></tr><tr><td>放大网页上的所有内容</td><td>⌘ 和 +</td></tr><tr><td>缩小网页上的所有内容</td><td>⌘ 和 -</td></tr><tr><td>将网页上的所有内容恢复到默认大小</td><td>⌘ + 0</td></tr><tr><td>向下滚动网页，一次一个屏幕</td><td>空格键</td></tr><tr><td>向上滚动网页，一次一个屏幕</td><td>Shift + 空格键</td></tr><tr><td>跳转到地址栏</td><td>⌘ + L</td></tr><tr><td>当前页搜索</td><td>⌘ + f</td></tr><tr><td>跳转到与查找栏中搜索字词相匹配的下一条内容</td><td>⌘ + g</td></tr><tr><td>跳转到与查找栏中搜索字词相匹配的上一条内容</td><td>⌘ + Shift + g</td></tr><tr><td>网络搜索</td><td>⌘ + Option + f</td></tr></tbody></table><h3 id="功能键"><a href="#功能键" class="headerlink" title="功能键"></a>功能键</h3><table><thead><tr><th>操作</th><th>快捷键</th></tr></thead><tbody><tr><td>显示或隐藏书签栏</td><td>⌘ + Shift + b</td></tr><tr><td>将当前网页保存为书签</td><td>⌘ + d</td></tr><tr><td>将所有打开的标签页以书签的形式保存在新文件夹中</td><td>⌘ + Shift + d</td></tr><tr><td>打开书签管理器</td><td>⌘ + Option + b</td></tr><tr><td>在新标签页中打开“设置”页</td><td>⌘ + ,</td></tr><tr><td>在新标签页中打开“历史记录”页</td><td>⌘ + y</td></tr><tr><td>在新标签页中打开“下载内容”页</td><td>⌘ + Shift + j</td></tr><tr><td>打开“清除浏览数据”选项</td><td>⌘ + Shift + Delete</td></tr><tr><td>使用其他帐号登录或以访客身份浏览</td><td>⌘ + Shift + m</td></tr><tr><td>打开“开发者工具”</td><td>⌘ + Option + i</td></tr><tr><td>显示当前网页的 HTML 源代码（不可修改）</td><td>⌘ + Option + u</td></tr><tr><td>打开 JavaScript 控制台</td><td>⌘ + Option + j</td></tr></tbody></table><ul><li>Mac 快捷键</li></ul><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td>Ctrl + Command + Q</td><td>锁屏</td></tr><tr><td>Cmd + Shift + 4</td><td>Mac截屏</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      Mac Chrome常用快捷键
    
    </summary>
    
    
    
      <category term="hotkey" scheme="https://fearless11.github.io/tags/hotkey/"/>
    
  </entry>
  
  <entry>
    <title>vim插件</title>
    <link href="https://fearless11.github.io/2020/06/15/vim/vim02-plugin/"/>
    <id>https://fearless11.github.io/2020/06/15/vim/vim02-plugin/</id>
    <published>2020-06-15T06:46:00.000Z</published>
    <updated>2020-06-15T13:28:44.697Z</updated>
    
    <content type="html"><![CDATA[<h3 id="更新版本"><a href="#更新版本" class="headerlink" title="更新版本"></a>更新版本</h3><ul><li><p>升级</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 查看</span></span><br><span class="line"> vim  --version</span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 脚本</span></span><br><span class="line">cat &lt;&lt;EOF &gt; vim-update.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Update vim to the latest version</span></span><br><span class="line"></span><br><span class="line">yum -y install  perl perl-devel python-devel  perl-ExtUtils-Embed ncurses-devel ctags</span><br><span class="line">wget https://github.com/vim/vim/archive/master.zip</span><br><span class="line">unzip master.zip &amp;&amp; <span class="built_in">cd</span> vim-master/src/</span><br><span class="line"></span><br><span class="line">./configure --<span class="built_in">enable</span>-multibyte \</span><br><span class="line">--<span class="built_in">enable</span>-pythoninterp=dynamic \</span><br><span class="line">--<span class="built_in">enable</span>-cscope \</span><br><span class="line">--<span class="built_in">enable</span>-gui=auto \</span><br><span class="line">--with-features=huge \</span><br><span class="line">--<span class="built_in">enable</span>-fontset \</span><br><span class="line">--<span class="built_in">enable</span>-largefile \</span><br><span class="line">--<span class="built_in">disable</span>-netbeans \</span><br><span class="line">--<span class="built_in">enable</span>-fail-if-missing</span><br><span class="line"></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">sh vim-update.sh</span><br></pre></td></tr></table></figure></li><li><p>汉化帮助</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">wget http://nchc.dl.sourceforge.net/sourceforge/vimcdoc/vimcdoc-1.5.0.tar.gz \</span><br><span class="line">--no-check-certificate</span><br><span class="line">tar xf vimcdoc-1.5.0.tar.gz &amp;&amp; <span class="built_in">cd</span> vimcdoc-1.5.0</span><br><span class="line">./vimcdoc.sh -i</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看中文帮助</span></span><br><span class="line">:<span class="built_in">help</span>   </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 命令模式设置</span></span><br><span class="line">:<span class="built_in">set</span> helplang=en (英)</span><br><span class="line">:<span class="built_in">set</span> helplang=cn (中)</span><br></pre></td></tr></table></figure></li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ul><li><p>查看配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim --version</span></span><br><span class="line">   system vimrc file: <span class="string">"/etc/vimrc"</span></span><br><span class="line">   user vimrc file: <span class="string">"<span class="variable">$HOME</span>/.vimrc"</span></span><br></pre></td></tr></table></figure></li><li><p>配置示例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim $HOME/.vimrc</span></span><br><span class="line"><span class="comment"># "代表注释</span></span><br><span class="line"></span><br><span class="line"><span class="string">" 编码</span></span><br><span class="line"><span class="string">set encoding=utf-8</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 插入行时自动对齐上一行缩进格式</span><br><span class="line"><span class="built_in">set</span> autoindent</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"></span><br><span class="line"><span class="string">" 开启语法检测</span></span><br><span class="line"><span class="string">syntax enable</span></span><br><span class="line"><span class="string">syntax on</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 缩进</span><br><span class="line"><span class="string">" tabstop是一个tab占几个space</span></span><br><span class="line"><span class="string">"</span> shiftwidth是自动缩进的时候用几个space</span><br><span class="line"><span class="string">" softtabstop是当编辑的时候一个tab表现为几个space</span></span><br><span class="line"><span class="string">set tabstop=4</span></span><br><span class="line"><span class="string">set shiftwidth=4</span></span><br><span class="line"><span class="string">set softtabstop=4</span></span><br><span class="line"><span class="string">set expandtab</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 为使代码风格保持一致，不允许在代码使用TAB符，以4个空格代替</span><br><span class="line"><span class="string">" 编辑c和cpp文件时实行这种设置</span></span><br><span class="line"><span class="string">"</span> autocmd FileType c,cpp <span class="built_in">set</span> shiftwidth=4 | <span class="built_in">set</span> expandta</span><br><span class="line"></span><br><span class="line"><span class="string">" 显示行号</span></span><br><span class="line"><span class="string">set number</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> 为单词左右补充&#123;&#125;  首字母按下\c</span><br><span class="line">map \c i&#123;&lt;Esc&gt;ea&#125;&lt;Esc&gt;    </span><br><span class="line"><span class="string">" 为单词左右补充()  首字母按下\p</span></span><br><span class="line"><span class="string">map \p i(&lt;Esc&gt;ea)&lt;Esc&gt;    </span></span><br><span class="line"><span class="string">"</span> 解释 i&#123;&lt;Esc&gt;代表插入&#123;后退出插入模式 ；e代表移动到词尾；a&#125;&lt;Esc&gt;代表插入&#125;后退出插入模式</span><br></pre></td></tr></table></figure><p>reference: <a href="https://my.oschina.net/uniquejava/blog/222868" target="_blank" rel="noopener">vim的tabstop shiftwidth</a>  </p></li></ul><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><ul><li>全局插件：用于所有类型的文件</li><li>文件类型插件：仅用于特定类型的文件</li></ul><h4 id="snippets"><a href="#snippets" class="headerlink" title="snippets"></a>snippets</h4><ul><li>代码自动补全<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install -y unzip zip</span><br><span class="line">mkdir ~/.vim   </span><br><span class="line">wget https://www.vim.org/scripts/download_script.php?src_id=11006 \</span><br><span class="line">--no-check-certificate -O snipMate.zip</span><br><span class="line">unzip snipMate.zip -d ~/.vim/</span><br><span class="line"></span><br><span class="line"><span class="comment"># shell补全snippets</span></span><br><span class="line">~/.vim/snippets/sh.snippets </span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用</span></span><br><span class="line"><span class="comment"># if+Tab补全if函数,同理wh+Tab补全while函数</span></span><br><span class="line"><span class="comment"># 只需要简单的按tab可跳到下一处修改</span></span><br><span class="line">vim a.sh</span><br><span class="line"><span class="keyword">if</span> [[ condition ]]; <span class="keyword">then</span> </span><br><span class="line">    statements   </span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义</span></span><br><span class="line"><span class="comment"># 按re+Tab自动补全 return true</span></span><br><span class="line">vim ~/.vim/snippets/sh.snippets</span><br><span class="line">snippet    re        <span class="comment"># 间隔为tab键</span></span><br><span class="line"><span class="built_in">return</span> <span class="variable">$&#123;1:true&#125;</span></span><br></pre></td></tr></table></figure>  reference: <a href="https://github.com/garbas/vim-snipmate/blob/master/doc/SnipMate.txt" target="_blank" rel="noopener">代码补全插件vim-snippets</a>   <a href="http://www.cnblogs.com/litifeng/p/5658587.html" target="_blank" rel="noopener">自定义snippet</a></li></ul><h3 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h3><h4 id="vundle"><a href="#vundle" class="headerlink" title="vundle"></a>vundle</h4><ul><li><p><a href="https://github.com/VundleVim/Vundle.vim" target="_blank" rel="noopener">Vundle.vim</a></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">mkdir -p ~/.vim/bundle</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">vim ~/.vimrc</span><br><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line"><span class="string">" 必要的配置</span></span><br><span class="line"><span class="string">filetype off    </span></span><br><span class="line"><span class="string">set rtp+=~/.vim/bundle/Vundle.vim</span></span><br><span class="line"><span class="string">call vundle#begin()</span></span><br><span class="line"><span class="string">"</span> 管理插件</span><br><span class="line">Plugin <span class="string">'gmarik/Vundle.vim'</span></span><br><span class="line"><span class="string">" 在下面写需要安装的插件</span></span><br><span class="line"><span class="string">"</span> snippets</span><br><span class="line">Plugin <span class="string">'honza/vim-snippets'</span></span><br><span class="line">Plugin <span class="string">'fatih/vim-go'</span></span><br><span class="line">call vundle<span class="comment">#end()</span></span><br><span class="line">filetype plugin indent on</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 执行</span></span><br><span class="line">:PluginInstall                   <span class="comment"># 命令行模式</span></span><br><span class="line">vim  vim +PluginInstall +qall    <span class="comment"># 终端</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看帮助</span></span><br><span class="line">:h vundle</span><br></pre></td></tr></table></figure></li><li><p><a href="https://github.com/fatih/vim-go-tutorial" target="_blank" rel="noopener">vim-go</a>  <a href="https://github.com/golang/go/wiki/IDEsAndTextEditorPlugins" target="_blank" rel="noopener">Go官方推荐插件 </a> </p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加  go插件要求vim版本8.0+</span></span><br><span class="line">vim ~/.vimrc</span><br><span class="line">Plugin <span class="string">'fatih/vim-go'</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">:PluginInstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># Go二进制必要的包</span></span><br><span class="line">:GoInstallBinaries</span><br></pre></td></tr></table></figure><p>  reference: <a href="https://blog.csdn.net/namecyf/article/details/7787479#commentBox" target="_blank" rel="noopener">vim配置及插件管理</a> </p></li></ul>]]></content>
    
    <summary type="html">
    
      vim插件管理
    
    </summary>
    
    
    
      <category term="vim" scheme="https://fearless11.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>vim基础</title>
    <link href="https://fearless11.github.io/2020/06/15/vim/vim01-basic/"/>
    <id>https://fearless11.github.io/2020/06/15/vim/vim01-basic/</id>
    <published>2020-06-15T06:46:00.000Z</published>
    <updated>2020-06-15T13:28:44.697Z</updated>
    
    <content type="html"><![CDATA[<p>  vim一种编辑器 Check <a href="http://vimdoc.sourceforge.net/" target="_blank" rel="noopener">documentation</a> <a href="https://github.com/vim/vim" target="_blank" rel="noopener">GitHub</a> for more info. </p><h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vimtutor</span><br></pre></td></tr></table></figure><h3 id="option"><a href="#option" class="headerlink" title="option"></a>option</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑文件，光标定位到第n行</span></span><br><span class="line">vi +n file </span><br><span class="line"><span class="comment"># 编辑并定位到最好一行</span></span><br><span class="line">vi + file </span><br><span class="line"><span class="comment"># 编辑搜索定位到string所在的行</span></span><br><span class="line">vi +/string file</span><br></pre></td></tr></table></figure><h3 id="四种模式"><a href="#四种模式" class="headerlink" title="四种模式"></a>四种模式</h3><ul><li>普通模式   （Esc切换）</li><li>插入模式   （iaosIAOS进入）</li><li>可视模式   （shift+v 行模式 ctrl+v 块模式）</li><li>命令模式   （:进入）</li></ul><h3 id="普通模式"><a href="#普通模式" class="headerlink" title="普通模式"></a>普通模式</h3><h4 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字母</span></span><br><span class="line">k         上移</span><br><span class="line">j         下移</span><br><span class="line">h         左移</span><br><span class="line">l         右移</span><br><span class="line">0         本行的开始</span><br><span class="line">$         本行的末尾</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单词</span></span><br><span class="line">w         下一个单词的开头</span><br><span class="line">e         下一个单词的末尾</span><br><span class="line">b         上一个单词的开头</span><br><span class="line"></span><br><span class="line"><span class="comment"># 行</span></span><br><span class="line">gg        文件第一行起始位置</span><br><span class="line">G         文件最后一行起始位置</span><br><span class="line">NG或Ngg   文件第 N 行的起始位置</span><br></pre></td></tr></table></figure><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fa        本行光标后第一个a字母的位置</span><br><span class="line">3fa       本行光标后第三个a字母的位置</span><br><span class="line">/str      正向搜索字符串str</span><br><span class="line">?str      反向搜索字符串str</span><br><span class="line">n         继续搜索下一个str字符串</span><br><span class="line">N         继续搜索上一个str字符串</span><br></pre></td></tr></table></figure><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字母</span></span><br><span class="line">rc        替换当前字母为c</span><br><span class="line">nrc       替换当前字母及后n-1个字母都为c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大小写</span></span><br><span class="line">~         反转光标所在字符的大小写</span><br><span class="line">U|u       可视模式下选中文本变为大写或小写</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通模式大小写转换</span></span><br><span class="line">gggUG       全文转换为大写, 解释 gg定位行首 gU替换为大写  G定位到行尾</span><br><span class="line">ggguG       转换为小写</span><br><span class="line">gUw、gUe    光标后单个单词转换为大写</span><br><span class="line">guw、gue    转换为小写</span><br><span class="line">gu5w、gu5e</span><br></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 字母</span></span><br><span class="line"> x          删除光标字母</span><br><span class="line"> nx         删除光标字母及后n-1个字母</span><br><span class="line"> nX         删除光标前n个字母</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 单词</span></span><br><span class="line"> dw         删除光标右侧单词</span><br><span class="line"> ndw        删除光标右侧n个单词</span><br><span class="line"> db         删除光标左侧单词</span><br><span class="line"> ndb        删除光标左侧n个单词</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 行</span></span><br><span class="line"> dd         删除光标所在行</span><br><span class="line"> ndd        删除(剪切)光标及后n-1行</span><br><span class="line"> nD         删除光标字符后及n-1行</span><br><span class="line"></span><br><span class="line"> d$         删除光标起到行尾</span><br><span class="line"> d0         删除光标起到行首</span><br><span class="line"></span><br><span class="line">&#123;visual&#125;d   删除高亮的文本</span><br></pre></td></tr></table></figure><h4 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">u       撤回上一个操作</span><br><span class="line">nu      撤回上n个操作</span><br><span class="line"></span><br><span class="line">CTRL-C  重做上一个撤销操作</span><br></pre></td></tr></table></figure><h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> nJ         用空格连接当前行及后n-1行</span><br><span class="line">&#123;visual&#125;J   用空格连接高亮的行</span><br></pre></td></tr></table></figure><h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;          向左缩进一个shiftwidth</span><br><span class="line">n&lt;&lt;         当前行及后n-1行向左缩进一个shiftwidth</span><br><span class="line">&gt;&gt;          向右缩进一个shiftwidth</span><br><span class="line">n&gt;&gt;         当前行及后n-1行向右缩进一个shiftwidth</span><br><span class="line"></span><br><span class="line">:ce(nter)   当前行居中</span><br><span class="line">:le(ft)     当前行靠左</span><br><span class="line">:ri(ght)    当前行靠右</span><br><span class="line"></span><br><span class="line">=           当前行按书写规则缩排好</span><br><span class="line">n=          当前行及后n-1行格式缩进</span><br><span class="line">&#123;visual&#125;=   选择的可视化行格式缩进</span><br></pre></td></tr></table></figure><h4 id="代码相关"><a href="#代码相关" class="headerlink" title="代码相关"></a>代码相关</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代码中函数跳转</span></span><br><span class="line">CTRL-]             跳到函数定义处</span><br><span class="line">CTRL-T 或 CTRL-o   跳回到上一级调用处</span><br><span class="line"></span><br><span class="line"><span class="comment"># 折叠</span></span><br><span class="line">zo|l  打开折叠</span><br><span class="line">zc    关闭折叠</span><br><span class="line">zO    打开所有光标行上的折叠用 </span><br><span class="line">zC    关闭所有光标行上的折叠用 </span><br><span class="line">zd    删除一个光标行上的折叠用 </span><br><span class="line">zD    删除所有光标行上的折叠用</span><br></pre></td></tr></table></figure><h3 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入</span></span><br><span class="line">i     光标前</span><br><span class="line">a     光标后</span><br><span class="line">I     当前行行首</span><br><span class="line">A     当前行末尾</span><br><span class="line">o     行后插入新行</span><br><span class="line">O     行前插入新行</span><br><span class="line">s     删除光标字符插入</span><br><span class="line">S     删除当前行插入</span><br><span class="line"></span><br><span class="line"><span class="comment"># 离开</span></span><br><span class="line">Esc            结束插入模式，回到普通模式</span><br><span class="line">CTRL-C         同Esc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 补全</span></span><br><span class="line">CTRL-N         </span><br><span class="line">CTRL-P         </span><br><span class="line">CTRL-X ...     以各种方式补全光标前的单词</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">CTRL-W         删除光标前的一个单词</span><br><span class="line">CTRL-U         删除光标到行首字符</span><br></pre></td></tr></table></figure><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查</span></span><br><span class="line">:<span class="built_in">set</span> spell    开启拼写检查</span><br><span class="line">:<span class="built_in">set</span> nospell  关闭拼写检查</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换</span></span><br><span class="line">:s/from/to/       当前行第一from单词替换为to</span><br><span class="line">:s/from/to/g      当前行所有from单词替换为to</span><br><span class="line">:s/from/to/gc     是否将当前行所有from单词替换为to</span><br><span class="line">:%s/from/to/gc    是否将文本中所有from单词替换为to</span><br><span class="line">:%s/^/xxx/g       文本行首插入xxx</span><br><span class="line">:%s/$/xxx/g       文本行尾插入xxx</span><br><span class="line">:%s/^[a-z]/\U&amp;/g  文本中所有首字母大写</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">:%d       删除全文</span><br><span class="line"></span><br><span class="line"><span class="comment"># 范围</span></span><br><span class="line">%:       所有行</span><br><span class="line">.:       当前行</span><br><span class="line">0:       文本首行</span><br><span class="line">$:       文本尾行</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销</span></span><br><span class="line">:undo 5    撤销5个改变</span><br><span class="line">:undolist  撤销历史</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      vim实用操作
    
    </summary>
    
    
    
      <category term="vim" scheme="https://fearless11.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>blog</title>
    <link href="https://fearless11.github.io/2020/06/15/blog/"/>
    <id>https://fearless11.github.io/2020/06/15/blog/</id>
    <published>2020-06-15T06:33:00.000Z</published>
    <updated>2020-06-15T13:28:44.697Z</updated>
    
    <content type="html"><![CDATA[<pre><code>hexo结合github pages搭建个人博客</code></pre><h3 id="hexo管理"><a href="#hexo管理" class="headerlink" title="hexo管理"></a>hexo管理</h3><ul><li><p>环境准备</p><ul><li>node.js</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># windows Git bash</span></span><br><span class="line">wget https://nodejs.org/dist/v8.11.4/node-v8.11.4-win-x64.zip</span><br><span class="line">unzip node-v8.11.4-win-x64.zip</span><br><span class="line">mv node-v8.11.4-win-x64 /d/node</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export PATH=$PATH:/d/node'</span> &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><ul><li>hexo</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure></li><li><p>本地部署</p><p>直接在source/_posts下写markdown即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">mkdir /d/blog &amp;&amp; <span class="built_in">cd</span> /d/blog</span><br><span class="line">hexo init .                </span><br><span class="line"><span class="comment"># 创建文章, 生产在source/_posts/my-blog.md</span></span><br><span class="line">hexo new <span class="string">"my blog"</span></span><br><span class="line"><span class="comment"># 生成：public/静态文件 （hexo generate）</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">hexo server          </span><br><span class="line"><span class="comment"># 浏览器查看刚创建的文章</span></span><br><span class="line">http://localhost:4000</span><br></pre></td></tr></table></figure></li></ul><h3 id="github部署"><a href="#github部署" class="headerlink" title="github部署"></a>github部署</h3><ul><li><p>github配置</p><ul><li>git-sshkey</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># setting github SSH</span></span><br><span class="line"><span class="comment"># 本地产生公钥copy到github上 Settings → SSH kyes → Add SSH key</span></span><br><span class="line">ssh-keygen -t rsa        </span><br><span class="line">cat ~/.ssh/id_rsa.pub </span><br><span class="line"><span class="comment"># 验证    </span></span><br><span class="line">ssh -T git@gitee.com   </span><br><span class="line">Hi fearless11! You<span class="string">'ve successfully authenticated...</span></span><br></pre></td></tr></table></figure><ul><li>github-pages</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建仓库: lemon11</span><br><span class="line">设置仓库: settings —&gt; GitHub Pages</span><br><span class="line">访问站点: https://fearless11.github.io/blog</span><br></pre></td></tr></table></figure></li><li><p>hexo配置</p><ul><li>插件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git deploye</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ul><li>config.yml</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /d/blog/_config.yml</span></span><br><span class="line">url: https://fearless11.github.io</span><br><span class="line">root: /blog/</span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:fearless11/blog.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ul><li>部署</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成及部署到github</span></span><br><span class="line">hexo -g d</span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">https://fearless11.github.io/blog</span><br></pre></td></tr></table></figure></li></ul><h3 id="hexo其他"><a href="#hexo其他" class="headerlink" title="hexo其他"></a>hexo其他</h3><ul><li><p>换主题&amp;开启RSS</p><ul><li>插件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rss</span></span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># other themes</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">npm --registry https://registry.npm.taobao.org</span><br><span class="line">npm install hexo-renderer-pug --save</span><br><span class="line">npm install hexo-renderer-sass --save --unsafe-perm=<span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /d/blog/_config.yml</span></span><br><span class="line"><span class="comment"># rss</span></span><br><span class="line">rss: /atom.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># theme</span></span><br><span class="line">theme: maupassant</span><br></pre></td></tr></table></figure><ul><li>重新部署</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生产</span></span><br><span class="line">hexo -g</span><br><span class="line"><span class="comment"># 本地部署</span></span><br><span class="line">hexo server </span><br><span class="line"><span class="comment"># 部署到github</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li><li><p>命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean              <span class="comment"># 清除</span></span><br><span class="line">hexo p == hexo publish  </span><br><span class="line">hexo g == hexo generate <span class="comment"># 生成</span></span><br><span class="line">hexo s == hexo server   <span class="comment"># 启动服务预览</span></span><br><span class="line">hexo d == hexo deploy   <span class="comment"># 部署</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h3><ul><li><a href="https://git-scm.com/" target="_blank" rel="noopener">git</a></li><li><a href="https://gitee.com/help/articles/4181#article-header0" target="_blank" rel="noopener">git-sshkey</a></li><li><a href="https://gitee.com/help/articles/4136#article-header2" target="_blank" rel="noopener">gitee-pages</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">hexo-docs</a></li><li><a href="https://www.haomwei.com/technology/maupassant-hexo.html" target="_blank" rel="noopener">hexo-theme-大道至简</a></li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子</a></li><li><a href="https://gitee.com/riku/Markdown-Syntax-CN" target="_blank" rel="noopener">markdown-syntax</a></li><li><a href="http://www.markdown.cn" target="_blank" rel="noopener">markdown-cn</a></li></ul>]]></content>
    
    <summary type="html">
    
      hexo结合github pages搭建个人博客
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://fearless11.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
